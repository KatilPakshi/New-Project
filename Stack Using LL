template <typename T>
class Stack {
    Node<T> *head;
    int size;		// number of elements prsent in stack
    
    public :
    
    Stack() {
        head = NULL;
        size = 0;
    }
    
    int getSize() {
        return size;
    }
    
    bool isEmpty() {
        return size == 0;
    }
    
    void push(T element) {
        Node<T> *newNode = new Node<T>(element);
		newNode -> next = head;
		head = newNode;
		size++;
        
    }
    
    T pop() {
        // Return 0 if stack is empty. Don't display any other message
        if(isEmpty()) {
			return 0;		
		}
        
		T ans = head -> data;
		Node<T> *temp = head; // to delete he popped data
		head = head -> next;
		delete temp;
		size--;
		return ans;
    }
    
    T top() {
        // Return 0 if stack is empty. Don't display any other message
        if(isEmpty()){
             return 0;   
        }   
        return head -> data;
    }
    
};

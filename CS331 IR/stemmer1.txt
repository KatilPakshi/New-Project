onlin
edit
c
2009
cambridg
up
an
introduct
to
inform
retriev
draft
of
april
1
2009
onlin
edit
c
2009
cambridg
up
onlin
edit
c
2009
cambridg
up
an
introduct
to
inform
retriev
christoph
d
man
prabhakar
raghavan
hinrich
schã¼tze
cambridg
univers
press
cambridg
england
onlin
edit
c
2009
cambridg
up
draft
do
not
distribut
without
prior
permiss
â©
2009
cambridg
univers
press
by
christoph
d
man
prabhakar
raghavan
&
hinrich
schã¼tze
print
on
april
1
2009
websit
http://www.informationretrieval.org/
comment
correct
and
other
feedback
most
welcom
at
informationretrieval@yahoogroups.com
onlin
edit
c
2009
cambridg
up
draft
â©
april
1
2009
cambridg
univers
press
feedback
welcom
v
brief
content
1
boolean
retriev
1
2
the
term
vocabulari
and
post
list
19
3
dictionari
and
toler
retriev
49
4
index
construct
67
5
index
compress
85
6
score
term
weight
and
the
vector
space
model
109
7
comput
score
in
a
complet
search
system
135
8
evalu
in
inform
retriev
151
9
relev
feedback
and
queri
expans
177
10
xml
retriev
195
11
probabilist
inform
retriev
219
12
languag
model
for
inform
retriev
237
13
text
classif
and
naiv
bay
253
14
vector
space
classif
289
15
support
vector
machin
and
machin
learn
on
document
319
16
flat
cluster
349
17
hierarch
cluster
377
18
matrix
decomposit
and
latent
semant
index
403
19
web
search
basic
421
20
web
crawl
and
index
443
21
link
analysi
461
onlin
edit
c
2009
cambridg
up
onlin
edit
c
2009
cambridg
up
draft
â©
april
1
2009
cambridg
univers
press
feedback
welcom
vii
content
list
of
tabl
xv
list
of
figur
xix
tabl
of
notat
xxvii
prefac
xxxi
1
boolean
retriev
1
1.1
an
exampl
inform
retriev
problem
3
1.2
a
first
take
at
build
an
invert
index
6
1.3
process
boolean
queri
10
1.4
the
extend
boolean
model
versu
rank
retriev
14
1.5
refer
and
further
read
17
2
the
term
vocabulari
and
post
list
19
2.1
document
delin
and
charact
sequenc
decod
19
2.1.1
obtain
the
charact
sequenc
in
a
document
19
2.1.2
choos
a
document
unit
20
2.2
determin
the
vocabulari
of
term
22
2.2.1
token
22
2.2.2
drop
common
term
stop
word
27
2.2.3
normal
equival
class
of
term
28
2.2.4
stem
and
lemmat
32
2.3
faster
post
list
intersect
via
skip
pointer
36
2.4
posit
post
and
phrase
queri
39
2.4.1
biword
index
39
2.4.2
posit
index
41
2.4.3
combin
scheme
43
2.5
refer
and
further
read
45
onlin
edit
c
2009
cambridg
up
viii
content
3
dictionari
and
toler
retriev
49
3.1
search
structur
for
dictionari
49
3.2
wildcard
queri
51
3.2.1
gener
wildcard
queri
53
3.2.2
k-gram
index
for
wildcard
queri
54
3.3
spell
correct
56
3.3.1
implement
spell
correct
57
3.3.2
form
of
spell
correct
57
3.3.3
edit
distanc
58
3.3.4
k-gram
index
for
spell
correct
60
3.3.5
context
sensit
spell
correct
62
3.4
phonet
correct
63
3.5
refer
and
further
read
65
4
index
construct
67
4.1
hardwar
basic
68
4.2
block
sort-bas
index
69
4.3
single-pass
in-memori
index
73
4.4
distribut
index
74
4.5
dynam
index
78
4.6
other
type
of
index
80
4.7
refer
and
further
read
83
5
index
compress
85
5.1
statist
properti
of
term
in
inform
retriev
86
5.1.1
heapsâ€™
law
estim
the
number
of
term
88
5.1.2
zipfâ€™
law
model
the
distribut
of
term
89
5.2
dictionari
compress
90
5.2.1
dictionari
as
a
string
91
5.2.2
block
storag
92
5.3
post
file
compress
95
5.3.1
variabl
byte
code
96
5.3.2
î³
code
98
5.4
refer
and
further
read
105
6
score
term
weight
and
the
vector
space
model
109
6.1
parametr
and
zone
index
110
6.1.1
weight
zone
score
112
6.1.2
learn
weight
113
6.1.3
the
optim
weight
g
115
6.2
term
frequenc
and
weight
117
6.2.1
invers
document
frequenc
117
6.2.2
tf-idf
weight
118
onlin
edit
c
2009
cambridg
up
content
ix
6.3
the
vector
space
model
for
score
120
6.3.1
dot
product
120
6.3.2
queri
as
vector
123
6.3.3
comput
vector
score
124
6.4
variant
tf-idf
function
126
6.4.1
sublinear
tf
scale
126
6.4.2
maximum
tf
normal
127
6.4.3
document
and
queri
weight
scheme
128
6.4.4
pivot
normal
document
length
129
6.5
refer
and
further
read
133
7
comput
score
in
a
complet
search
system
135
7.1
effici
score
and
rank
135
7.1.1
inexact
top
k
document
retriev
137
7.1.2
index
elimin
137
7.1.3
champion
list
138
7.1.4
static
qualiti
score
and
order
138
7.1.5
impact
order
140
7.1.6
cluster
prune
141
7.2
compon
of
an
inform
retriev
system
143
7.2.1
tier
index
143
7.2.2
query-term
proxim
144
7.2.3
design
pars
and
score
function
145
7.2.4
put
it
all
togeth
146
7.3
vector
space
score
and
queri
oper
interact
147
7.4
refer
and
further
read
149
8
evalu
in
inform
retriev
151
8.1
inform
retriev
system
evalu
152
8.2
standard
test
collect
153
8.3
evalu
of
unrank
retriev
set
154
8.4
evalu
of
rank
retriev
result
158
8.5
assess
relev
164
8.5.1
critiqu
and
justif
of
the
concept
of
relev
166
8.6
a
broader
perspect
system
qualiti
and
user
util
168
8.6.1
system
issu
168
8.6.2
user
util
169
8.6.3
refin
a
deploy
system
170
8.7
result
snippet
170
8.8
refer
and
further
read
173
9
relev
feedback
and
queri
expans
177
onlin
edit
c
2009
cambridg
up
x
content
9.1
relev
feedback
and
pseudo
relev
feedback
178
9.1.1
the
rocchio
algorithm
for
relev
feedback
178
9.1.2
probabilist
relev
feedback
183
9.1.3
when
doe
relev
feedback
work?
183
9.1.4
relev
feedback
on
the
web
185
9.1.5
evalu
of
relev
feedback
strategi
186
9.1.6
pseudo
relev
feedback
187
9.1.7
indirect
relev
feedback
187
9.1.8
summari
188
9.2
global
method
for
queri
reformul
189
9.2.1
vocabulari
tool
for
queri
reformul
189
9.2.2
queri
expans
189
9.2.3
automat
thesauru
gener
192
9.3
refer
and
further
read
193
10
xml
retriev
195
10.1
basic
xml
concept
197
10.2
challeng
in
xml
retriev
201
10.3
a
vector
space
model
for
xml
retriev
206
10.4
evalu
of
xml
retriev
210
10.5
text-centr
vs
data-centr
xml
retriev
214
10.6
refer
and
further
read
216
10.7
exercis
217
11
probabilist
inform
retriev
219
11.1
review
of
basic
probabl
theori
220
11.2
the
probabl
rank
principl
221
11.2.1
the
1/0
loss
case
221
11.2.2
the
prp
with
retriev
cost
222
11.3
the
binari
independ
model
222
11.3.1
deriv
a
rank
function
for
queri
term
224
11.3.2
probabl
estim
in
theori
226
11.3.3
probabl
estim
in
practic
227
11.3.4
probabilist
approach
to
relev
feedback
228
11.4
an
apprais
and
some
extens
230
11.4.1
an
apprais
of
probabilist
model
230
11.4.2
tree-structur
depend
between
term
231
11.4.3
okapi
bm25
a
non-binari
model
232
11.4.4
bayesian
network
approach
to
ir
234
11.5
refer
and
further
read
235
12
languag
model
for
inform
retriev
237
12.1
languag
model
237
onlin
edit
c
2009
cambridg
up
content
xi
12.1.1
finit
automata
and
languag
model
237
12.1.2
type
of
languag
model
240
12.1.3
multinomi
distribut
over
word
241
12.2
the
queri
likelihood
model
242
12.2.1
use
queri
likelihood
languag
model
in
ir
242
12.2.2
estim
the
queri
gener
probabl
243
12.2.3
pont
and
croftâ€™
experi
246
12.3
languag
model
versu
other
approach
in
ir
248
12.4
extend
languag
model
approach
250
12.5
refer
and
further
read
252
13
text
classif
and
naiv
bay
253
13.1
the
text
classif
problem
256
13.2
naiv
bay
text
classif
258
13.2.1
relat
to
multinomi
unigram
languag
model
262
13.3
the
bernoulli
model
263
13.4
properti
of
naiv
bay
265
13.4.1
a
variant
of
the
multinomi
model
270
13.5
featur
select
271
13.5.1
mutual
inform
272
13.5.2
ï‡
2
featur
select
275
13.5.3
frequency-bas
featur
select
277
13.5.4
featur
select
for
multipl
classifi
278
13.5.5
comparison
of
featur
select
method
278
13.6
evalu
of
text
classif
279
13.7
refer
and
further
read
286
14
vector
space
classif
289
14.1
document
represent
and
measur
of
related
in
vector
space
291
14.2
rocchio
classif
292
14.3
k
nearest
neighbor
297
14.3.1
time
complex
and
optim
of
knn
299
14.4
linear
versu
nonlinear
classifi
301
14.5
classif
with
more
than
two
class
306
14.6
the
bias-vari
tradeoff
308
14.7
refer
and
further
read
314
14.8
exercis
315
15
support
vector
machin
and
machin
learn
on
document
319
15.1
support
vector
machin
the
linearli
separ
case
320
15.2
extens
to
the
svm
model
327
15.2.1
soft
margin
classif
327
onlin
edit
c
2009
cambridg
up
xii
content
15.2.2
multiclass
svm
330
15.2.3
nonlinear
svm
330
15.2.4
experiment
result
333
15.3
issu
in
the
classif
of
text
document
334
15.3.1
choos
what
kind
of
classifi
to
use
335
15.3.2
improv
classifi
perform
337
15.4
machin
learn
method
in
ad
hoc
inform
retriev
341
15.4.1
a
simpl
exampl
of
machine-learn
score
341
15.4.2
result
rank
by
machin
learn
344
15.5
refer
and
further
read
346
16
flat
cluster
349
16.1
cluster
in
inform
retriev
350
16.2
problem
statement
354
16.2.1
cardin
â€“
the
number
of
cluster
355
16.3
evalu
of
cluster
356
16.4
k-mean
360
16.4.1
cluster
cardin
in
k-mean
365
16.5
model-bas
cluster
368
16.6
refer
and
further
read
372
16.7
exercis
374
17
hierarch
cluster
377
17.1
hierarch
agglom
cluster
378
17.2
single-link
and
complete-link
cluster
382
17.2.1
time
complex
of
hac
385
17.3
group-averag
agglom
cluster
388
17.4
centroid
cluster
391
17.5
optim
of
hac
393
17.6
divis
cluster
395
17.7
cluster
label
396
17.8
implement
note
398
17.9
refer
and
further
read
399
17.10
exercis
401
18
matrix
decomposit
and
latent
semant
index
403
18.1
linear
algebra
review
403
18.1.1
matrix
decomposit
406
18.2
term-docu
matric
and
singular
valu
decomposit
407
18.3
low-rank
approxim
410
18.4
latent
semant
index
412
18.5
refer
and
further
read
417
onlin
edit
c
2009
cambridg
up
content
xiii
19
web
search
basic
421
19.1
background
and
histori
421
19.2
web
characterist
423
19.2.1
the
web
graph
425
19.2.2
spam
427
19.3
advertis
as
the
econom
model
429
19.4
the
search
user
experi
432
19.4.1
user
queri
need
432
19.5
index
size
and
estim
433
19.6
near-dupl
and
shingl
437
19.7
refer
and
further
read
441
20
web
crawl
and
index
443
20.1
overview
443
20.1.1
featur
a
crawler
must
provid
443
20.1.2
featur
a
crawler
should
provid
444
20.2
crawl
444
20.2.1
crawler
architectur
445
20.2.2
dn
resolut
449
20.2.3
the
url
frontier
451
20.3
distribut
index
454
20.4
connect
server
455
20.5
refer
and
further
read
458
21
link
analysi
461
21.1
the
web
as
a
graph
462
21.1.1
anchor
text
and
the
web
graph
462
21.2
pagerank
464
21.2.1
markov
chain
465
21.2.2
the
pagerank
comput
468
21.2.3
topic-specif
pagerank
471
21.3
hub
and
author
474
21.3.1
choos
the
subset
of
the
web
477
21.4
refer
and
further
read
480
bibliographi
483
author
index
519
onlin
edit
c
2009
cambridg
up
onlin
edit
c
2009
cambridg
up
draft
â©
april
1
2009
cambridg
univers
press
feedback
welcom
xv
list
of
tabl
4.1
typic
system
paramet
in
2007
the
seek
time
is
the
time
need
to
posit
the
disk
head
in
a
new
posit
the
transfer
time
per
byte
is
the
rate
of
transfer
from
disk
to
memori
when
the
head
is
in
the
right
posit
68
4.2
collect
statist
for
reuters-rcv1
valu
are
round
for
the
comput
in
thi
book
the
unround
valu
are
806,791
document
222
token
per
document
391,523
distinct
term
6.04
byte
per
token
with
space
and
punctuat
4.5
byte
per
token
without
space
and
punctuat
7.5
byte
per
term
and
96,969,056
token
the
number
in
thi
tabl
correspond
to
the
third
line
â€œcase
foldingâ€
in
tabl
5.1
page
87
70
4.3
the
five
step
in
construct
an
index
for
reuters-rcv1
in
block
sort-bas
index
line
number
refer
to
figur
4.2
82
4.4
collect
statist
for
a
larg
collect
82
5.1
the
effect
of
preprocess
on
the
number
of
term
nonposit
post
and
token
for
reuters-rcv1
â€œâˆ†%â€
indic
the
reduct
in
size
from
the
previou
line
except
that
â€œ30
stop
wordsâ€
and
â€œ150
stop
wordsâ€
both
use
â€œcase
foldingâ€
as
their
refer
line
â€œt%â€
is
the
cumul
â€œtotalâ€
reduct
from
unfilt
we
perform
stem
with
the
porter
stemmer
chapter
2
page
33
87
5.2
dictionari
compress
for
reuters-rcv1
95
5.3
encod
gap
instead
of
document
id
for
exampl
we
store
gap
107
5
43




instead
of
docid
283154
283159
283202



for
comput
the
first
docid
is
left
unchang
onli
shown
for
arachnocentr
96
5.4
vb
encod
97
onlin
edit
c
2009
cambridg
up
xvi
list
of
tabl
5.5
some
exampl
of
unari
and
î³
code
unari
code
are
onli
shown
for
the
smaller
number
comma
in
î³
code
are
for
readabl
onli
and
are
not
part
of
the
actual
code
98
5.6
index
and
dictionari
compress
for
reuters-rcv1
the
compress
ratio
depend
on
the
proport
of
actual
text
in
the
collect
reuters-rcv1
contain
a
larg
amount
of
xml
markup
use
the
two
best
compress
scheme
î³
encod
and
block
with
front
code
the
ratio
compress
index
to
collect
size
is
therefor
especi
small
for
reuters-rcv1
101
+
5.9)/3600
â‰ˆ
0.03
103
5.7
two
gap
sequenc
to
be
merg
in
block
sort-bas
index
105
6.1
cosin
comput
for
exercis
6.19
132
8.1
calcul
of
11-point
interpol
averag
precis
159
8.2
calcul
the
kappa
statist
165
10.1
rdb
relat
databas
search
unstructur
inform
retriev
and
structur
inform
retriev
196
10.2
inex
2002
collect
statist
211
10.3
inex
2002
result
of
the
vector
space
model
in
section
10.3
for
content-and-structur
ca
queri
and
the
quantiz
function
q
213
10.4
a
comparison
of
content-onli
and
full-structur
search
in
inex
2003/2004
214
13.1
data
for
paramet
estim
exampl
261
13.2
train
and
test
time
for
nb
261
13.3
multinomi
versu
bernoulli
model
268
13.4
correct
estim
impli
accur
predict
but
accur
predict
doe
not
impli
correct
estim
269
13.5
a
set
of
document
for
which
the
nb
independ
assumpt
are
problemat
270
13.6
critic
valu
of
the
ï‡
2
distribut
with
one
degre
of
freedom
for
exampl
if
the
two
event
are
independ
then
p(x
2
>
6.63
<
0.01
so
for
x
2
>
6.63
the
assumpt
of
independ
can
be
reject
with
99%
confid
277
13.7
the
ten
largest
class
in
the
reuters-21578
collect
with
number
of
document
in
train
and
test
set
280
onlin
edit
c
2009
cambridg
up
list
of
tabl
xvii
13.8
macro
and
microaverag
â€œtruthâ€
is
the
true
class
and
â€œcallâ€
the
decis
of
the
classifi
in
thi
exampl
macroaverag
precis
is
10/(10
+
10
+
90/(10
+
90)]/2
=
0.5
+
0.9)/2
=
0.7
microaverag
precis
is
100/(100
+
20
â‰ˆ
0.83
282
13.9
text
classif
effect
number
on
reuters-21578
for
f1
in
percent
result
from
li
and
yang
2003
a
joachim
1998
b
knn
and
dumai
et
al
1998
b
nb
rocchio
tree
svm
282
13.10
data
for
paramet
estim
exercis
284
14.1
vector
and
class
centroid
for
the
data
in
tabl
13.1
294
14.2
train
and
test
time
for
rocchio
classif
296
14.3
train
and
test
time
for
knn
classif
299
14.4
a
linear
classifi
303
14.5
a
confus
matrix
for
reuters-21578
308
15.1
train
and
test
complex
of
variou
classifi
includ
svm
329
15.2
svm
classifi
break-even
f1
from
joachim
2002a
p
114
334
15.3
train
exampl
for
machine-learn
score
342
16.1
some
applic
of
cluster
in
inform
retriev
351
16.2
the
four
extern
evalu
measur
appli
to
the
cluster
in
figur
16.4
357
16.3
the
em
cluster
algorithm
371
17.1
comparison
of
hac
algorithm
395
17.2
automat
comput
cluster
label
397
onlin
edit
c
2009
cambridg
up
onlin
edit
c
2009
cambridg
up
draft
â©
april
1
2009
cambridg
univers
press
feedback
welcom
xix
list
of
figur
1.1
a
term-docu
incid
matrix
4
1.2
result
from
shakespear
for
the
queri
brutu
and
caesar
and
not
calpurnia
5
1.3
the
two
part
of
an
invert
index
7
1.4
build
an
index
by
sort
and
group
8
1.5
intersect
the
post
list
for
brutu
and
calpurnia
from
figur
1.3
10
1.6
algorithm
for
the
intersect
of
two
post
list
p1
and
p2
11
1.7
algorithm
for
conjunct
queri
that
return
the
set
of
document
contain
each
term
in
the
input
list
of
term
12
2.1
an
exampl
of
a
vocal
modern
standard
arab
word
21
2.2
the
conceptu
linear
order
of
charact
is
not
necessarili
the
order
that
you
see
on
the
page
21
2.3
the
standard
unseg
form
of
chines
text
use
the
simplifi
charact
of
mainland
china
26
2.4
ambigu
in
chines
word
segment
26
2.5
a
stop
list
of
25
semant
non-select
word
which
are
common
in
reuters-rcv1
26
2.6
an
exampl
of
how
asymmetr
expans
of
queri
term
can
use
model
usersâ€™
expect
28
2.7
japanes
make
use
of
multipl
intermingl
write
system
and
like
chines
doe
not
segment
word
31
2.8
a
comparison
of
three
stem
algorithm
on
a
sampl
text
34
2.9
post
list
with
skip
pointer
36
2.10
post
list
intersect
with
skip
pointer
37
2.11
posit
index
exampl
41
2.12
an
algorithm
for
proxim
intersect
of
post
list
p1
and
p2
42
onlin
edit
c
2009
cambridg
up
xx
list
of
figur
3.1
a
binari
search
tree
51
3.2
a
b-tree
52
3.3
a
portion
of
a
permuterm
index
54
3.4
exampl
of
a
post
list
in
a
3-gram
index
55
3.5
dynam
program
algorithm
for
comput
the
edit
distanc
between
string
s1
and
s2
59
3.6
exampl
levenshtein
distanc
comput
59
3.7
match
at
least
two
of
the
three
2-gram
in
the
queri
bord
61
4.1
document
from
the
reuter
newswir
70
4.2
block
sort-bas
index
71
4.3
merg
in
block
sort-bas
index
72
4.4
invers
of
a
block
in
single-pass
in-memori
index
73
4.5
an
exampl
of
distribut
index
with
mapreduc
adapt
from
dean
and
ghemawat
2004
76
4.6
map
and
reduc
function
in
mapreduc
77
4.7
logarithm
merg
each
token
termid,docid
is
initi
ad
to
in-memori
index
z0
by
lmergeaddtoken
logarithmicmerg
initi
z0
and
index
79
4.8
a
user-docu
matrix
for
access
control
list
element
i
j
is
1
if
user
i
ha
access
to
document
j
and
0
otherwis
dure
queri
process
a
userâ€™
access
post
list
is
intersect
with
the
result
list
return
by
the
text
part
of
the
index
81
5.1
heapsâ€™
law
88
5.2
zipfâ€™
law
for
reuters-rcv1
90
5.3
store
the
dictionari
as
an
array
of
fixed-width
entri
91
5.4
dictionary-as-a-str
storag
92
5.5
block
storag
with
four
term
per
block
93
5.6
search
of
the
uncompress
dictionari
a
and
a
dictionari
compress
by
block
with
k
=
4
b
94
5.7
front
code
94
5.8
vb
encod
and
decod
97
5.9
entropi
h(p
as
a
function
of
p(x1
for
a
sampl
space
with
two
outcom
x1
and
x2
100
5.10
stratif
of
term
for
estim
the
size
of
a
î³
encod
invert
index
102
6.1
parametr
search
111
6.2
basic
zone
index
111
6.3
zone
index
in
which
the
zone
is
encod
in
the
post
rather
than
the
dictionari
111
onlin
edit
c
2009
cambridg
up
list
of
figur
xxi
6.4
algorithm
for
comput
the
weight
zone
score
from
two
post
list
113
6.5
an
illustr
of
train
exampl
115
6.6
the
four
possibl
combin
of
st
and
sb
115
6.7
collect
frequenc
cf
and
document
frequenc
df
behav
differ
as
in
thi
exampl
from
the
reuter
collect
118
6.8
exampl
of
idf
valu
119
6.9
tabl
of
tf
valu
for
exercis
6.10
120
6.10
cosin
similar
illustr
121
6.11
euclidean
normal
tf
valu
for
document
in
figur
6.9
122
6.12
term
frequenc
in
three
novel
122
6.13
term
vector
for
the
three
novel
of
figur
6.12
123
6.14
the
basic
algorithm
for
comput
vector
space
score
125
6.15
smart
notat
for
tf-idf
variant
128
6.16
pivot
document
length
normal
130
6.17
implement
pivot
document
length
normal
by
linear
scale
131
7.1
a
faster
algorithm
for
vector
space
score
136
7.2
a
static
quality-ord
index
139
7.3
cluster
prune
142
7.4
tier
index
144
7.5
a
complet
search
system
147
8.1
graph
compar
the
harmon
mean
to
other
mean
157
8.2
precision/recal
graph
158
8.3
averag
11-point
precision/recal
graph
across
50
queri
for
a
repres
trec
system
160
8.4
the
roc
curv
correspond
to
the
precision-recal
curv
in
figur
8.2
162
8.5
an
exampl
of
select
text
for
a
dynam
snippet
172
9.1
relev
feedback
search
over
imag
179
9.2
exampl
of
relev
feedback
on
a
text
collect
180
9.3
the
rocchio
optim
queri
for
separ
relev
and
nonrelev
document
181
9.4
an
applic
of
rocchioâ€™
algorithm
182
9.5
result
show
pseudo
relev
feedback
greatli
improv
perform
187
9.6
an
exampl
of
queri
expans
in
the
interfac
of
the
yahoo
web
search
engin
in
2006
190
9.7
exampl
of
queri
expans
via
the
pubm
thesauru
191
9.8
an
exampl
of
an
automat
gener
thesauru
192
onlin
edit
c
2009
cambridg
up
xxii
list
of
figur
10.1
an
xml
document
198
10.2
the
xml
document
in
figur
10.1
as
a
simplifi
dom
object
198
10.3
an
xml
queri
in
nexi
format
and
it
partial
represent
as
a
tree
199
10.4
tree
represent
of
xml
document
and
queri
200
10.5
partit
an
xml
document
into
non-overlap
index
unit
202
10.6
schema
heterogen
interven
node
and
mismatch
name
204
10.7
a
structur
mismatch
between
two
queri
and
a
document
206
10.8
a
map
of
an
xml
document
left
to
a
set
of
lexic
subtre
right
207
10.9
the
algorithm
for
score
document
with
simnomerg
209
10.10
score
of
a
queri
with
one
structur
term
in
simnomerg
209
10.11
simplifi
schema
of
the
document
in
the
inex
collect
211
11.1
a
tree
of
depend
between
term
232
12.1
a
simpl
finit
automaton
and
some
of
the
string
in
the
languag
it
gener
238
12.2
a
one-st
finit
automaton
that
act
as
a
unigram
languag
model
238
12.3
partial
specif
of
two
unigram
languag
model
239
12.4
result
of
a
comparison
of
tf-idf
with
languag
model
lm
term
weight
by
pont
and
croft
1998
247
12.5
three
way
of
develop
the
languag
model
approach
a
queri
likelihood
b
document
likelihood
and
c
model
comparison
250
13.1
class
train
set
and
test
set
in
text
classif

257
13.2
naiv
bay
algorithm
multinomi
model
train
and
test
260
13.3
nb
algorithm
bernoulli
model
train
and
test
263
13.4
the
multinomi
nb
model
266
13.5
the
bernoulli
nb
model
267
13.6
basic
featur
select
algorithm
for
select
the
k
best
featur
271
13.7
featur
with
high
mutual
inform
score
for
six
reuters-rcv1
class
274
13.8
effect
of
featur
set
size
on
accuraci
for
multinomi
and
bernoulli
model
275
13.9
a
sampl
document
from
the
reuters-21578
collect
281
14.1
vector
space
classif
into
three
class
290
onlin
edit
c
2009
cambridg
up
list
of
figur
xxiii
14.2
project
of
small
area
of
the
unit
sphere
preserv
distanc
291
14.3
rocchio
classif
293
14.4
rocchio
classif
train
and
test
295
14.5
the
multimod
class
â€œaâ€
consist
of
two
differ
cluster
small
upper
circl
center
on
xâ€™
295
14.6
voronoi
tessel
and
decis
boundari
doubl
line
in
1nn
classif
297
14.7
knn
train
with
preprocess
and
test
298
14.8
there
are
an
infinit
number
of
hyperplan
that
separ
two
linearli
separ
class
301
14.9
linear
classif
algorithm
302
14.10
a
linear
problem
with
nois
304
14.11
a
nonlinear
problem
305
14.12
j
hyperplan
do
not
divid
space
into
j
disjoint
region
307
14.13
arithmet
transform
for
the
bias-vari
decomposit
310
14.14
exampl
for
differ
between
euclidean
distanc
dot
product
similar
and
cosin
similar
316
14.15
a
simpl
non-separ
set
of
point
317
15.1
the
support
vector
are
the
5
point
right
up
against
the
margin
of
the
classifi
320
15.2
an
intuit
for
large-margin
classif
321
15.3
the
geometr
margin
of
a
point
r
and
a
decis
boundari
ï
323
15.4
a
tini
3
data
point
train
set
for
an
svm
325
15.5
larg
margin
classif
with
slack
variabl
327
15.6
project
data
that
is
not
linearli
separ
into
a
higher
dimension
space
can
make
it
linearli
separ
331
15.7
a
collect
of
train
exampl
343
16.1
an
exampl
of
a
data
set
with
a
clear
cluster
structur
349
16.2
cluster
of
search
result
to
improv
recal
352
16.3
an
exampl
of
a
user
session
in
scatter-gath
353
16.4
puriti
as
an
extern
evalu
criterion
for
cluster
qualiti
357
16.5
the
k-mean
algorithm
361
16.6
a
k-mean
exampl
for
k
=
2
in
r2

362
16.7
the
outcom
of
cluster
in
k-mean
depend
on
the
initi
seed
364
16.8
estim
minim
residu
sum
of
squar
as
a
function
of
the
number
of
cluster
in
k-mean
366
17.1
a
dendrogram
of
a
single-link
cluster
of
30
document
from
reuters-rcv1
379
17.2
a
simpl
but
ineffici
hac
algorithm
381
onlin
edit
c
2009
cambridg
up
xxiv
list
of
figur
17.3
the
differ
notion
of
cluster
similar
use
by
the
four
hac
algorithm
381
17.4
a
single-link
left
and
complete-link
right
cluster
of
eight
document
382
17.5
a
dendrogram
of
a
complete-link
cluster
383
17.6
chain
in
single-link
cluster
384
17.7
outlier
in
complete-link
cluster
385
17.8
the
priority-queu
algorithm
for
hac
386
17.9
single-link
cluster
algorithm
use
an
nbm
array
387
17.10
complete-link
cluster
is
not
best-merg
persist
388
17.11
three
iter
of
centroid
cluster
391
17.12
centroid
cluster
is
not
monoton
392
18.1
illustr
of
the
singular-valu
decomposit
409
18.2
illustr
of
low
rank
approxim
use
the
singular-valu
decomposit
411
18.3
the
document
of
exampl
18.4
reduc
to
two
dimens
in
v
â€²

t

416
18.4
document
for
exercis
18.11
418
18.5
glossari
for
exercis
18.11
418
19.1
a
dynam
gener
web
page
425
19.2
two
node
of
the
web
graph
join
by
a
link
425
19.3
a
sampl
small
web
graph
426
19.4
the
bowti
structur
of
the
web
427
19.5
cloak
as
use
by
spammer
428
19.6
search
advertis
trigger
by
queri
keyword
431
19.7
the
variou
compon
of
a
web
search
engin
434
19.8
illustr
of
shingl
sketch
439
19.9
two
set
sj1
and
sj2

their
jaccard
coeffici
is
2/5
440
20.1
the
basic
crawler
architectur
446
20.2
distribut
the
basic
crawl
architectur
449
20.3
the
url
frontier
452
20.4
exampl
of
an
auxiliari
hosts-to-back
queue
tabl
453
20.5
a
lexicograph
order
set
of
url
456
20.6
a
four-row
segment
of
the
tabl
of
link
457
21.1
the
random
surfer
at
node
a
proce
with
probabl
1/3
to
each
of
b
c
and
d
464
21.2
a
simpl
markov
chain
with
three
state
the
number
on
the
link
indic
the
transit
probabl
466
21.3
the
sequenc
of
probabl
vector
469
onlin
edit
c
2009
cambridg
up
list
of
figur
xxv
21.4
a
small
web
graph
470
21.5
topic-specif
pagerank
472
21.6
a
sampl
run
of
hit
on
the
queri
japan
elementari
school
479
21.7
web
graph
for
exercis
21.22
480
onlin
edit
c
2009
cambridg
up
onlin
edit
c
2009
cambridg
up
draft
â©
april
1
2009
cambridg
univers
press
feedback
welcom
xxvii
tabl
of
notat
symbol
page
mean
î³
p
98
î³
code
î³
p
256
classif
or
cluster
function
î³(d
is
dâ€™
class
or
cluster
î“
p
256
supervis
learn
method
in
chapter
13
and
14
î“(d
is
the
classif
function
î³
learn
from
train
set
d
î»
p
404
eigenvalu
~âµ
p
292
centroid
of
a
class
in
rocchio
classif
or
a
cluster
in
k-mean
and
centroid
cluster
î¦
p
114
train
exampl
ïƒ
p
408
singular
valu
î˜(â·
p
11
a
tight
bound
on
the
complex
of
an
algorithm
ï‰
ï‰k
p
357
cluster
in
cluster
â„¦
p
357
cluster
or
set
of
cluster
{ï‰1




ï‰k}
arg
maxx
f(x
p
181
the
valu
of
x
for
which
f
reach
it
maximum
arg
minx
f(x
p
181
the
valu
of
x
for
which
f
reach
it
minimum
c
cj
p
256
class
or
categori
in
classif
cft
p
89
the
collect
frequenc
of
term
t
the
total
number
of
time
the
term
appear
in
the
document
collect
c
p
256
set
{c1





cj}
of
all
class
c
p
268
a
random
variabl
that
take
as
valu
member
of
c
onlin
edit
c
2009
cambridg
up
xxviii
tabl
of
notat
c
p
403
term-docu
matrix
d
p
4
index
of
the
d
th
document
in
the
collect
d
d
p
71
a
document
d~,~q
p
181
document
vector
queri
vector
d
p
354
set
{d1




dn}
of
all
document
dc
p
292
set
of
document
that
is
in
class
c
d
p
256
set
{hd1

c1i



hdn
cni}
of
all
label
document
in
chapter
13â€“15
dft
p
118
the
document
frequenc
of
term
t
the
total
number
of
document
in
the
collect
the
term
appear
in
h
p
99
entropi
hm
p
101
mth
harmon
number
i(x;i
p
272
mutual
inform
of
random
variabl
x
and
y
idft
p
118
invers
document
frequenc
of
term
t
j
p
256
number
of
class
k
p
290
top
k
item
from
a
set
e.g
k
nearest
neighbor
in
knn
top
k
retriev
document
top
k
select
featur
from
the
vocabulari
v
k
p
54
sequenc
of
k
charact
k
p
354
number
of
cluster
ld
p
233
length
of
document
d
in
token
la
p
262
length
of
the
test
document
or
applic
document
in
token
lave
p
70
averag
length
of
a
document
in
token
m
p
5
size
of
the
vocabulari
|v|
ma
p
262
size
of
the
vocabulari
of
the
test
document
or
applic
document
mave
p
78
averag
size
of
the
vocabulari
in
a
document
in
the
collect
md
p
237
languag
model
for
document
d
n
p
4
number
of
document
in
the
retriev
or
train
collect
nc
p
259
number
of
document
in
class
c
n(ï‰
p
298
number
of
time
the
event
ï‰
occur
onlin
edit
c
2009
cambridg
up
tabl
of
notat
xxix
o(â·
p
11
a
bound
on
the
complex
of
an
algorithm
o(â·
p
221
the
odd
of
an
event
p
p
155
precis
p(â·
p
220
probabl
p
p
465
transit
probabl
matrix
q
p
59
a
queri
r
p
155
recal
si
p
58
a
string
si
p
112
boolean
valu
for
zone
score
sim(d1
d2
p
121
similar
score
for
document
d1
d2
t
p
43
total
number
of
token
in
the
document
collect
tct
p
259
number
of
occurr
of
word
t
in
document
of
class
c
t
p
4
index
of
the
t
th
term
in
the
vocabulari
v
t
p
61
a
term
in
the
vocabulari
tft,d
p
117
the
term
frequenc
of
term
t
in
document
d
the
total
number
of
occurr
of
t
in
d
ut
p
266
random
variabl
take
valu
0
term
t
is
present
and
1
t
is
not
present
v
p
208
vocabulari
of
term
{t1





tm}
in
a
collect
a.k.a
the
lexicon
~v(d
p
122
length-norm
document
vector
v~
d
p
120
vector
of
document
d
not
length-norm
wft,d
p
125
weight
of
term
t
in
document
d
w
p
112
a
weight
for
exampl
for
zone
or
term
w~
t~x
=
b
p
293
hyperplan
w~
is
the
normal
vector
of
the
hyperplan
and
wi
compon
i
of
w~
~x
p
222
term
incid
vector
~x
=
x1




xm
more
gener
document
featur
represent
x
p
266
random
variabl
take
valu
in
v
the
vocabulari
e.g
at
a
given
posit
k
in
a
document
x
p
256
document
space
in
text
classif
|a|
p
61
set
cardin
the
number
of
member
of
set
a
|s|
p
404
determin
of
the
squar
matrix
s
onlin
edit
c
2009
cambridg
up
xxx
tabl
of
notat
|si
|
p
58
length
in
charact
of
string
si
|~x|
p
139
length
of
vector
~x
|~x
âˆ’~y|
p
131
euclidean
distanc
of
~x
and
~y
which
is
the
length
of
~x
âˆ’~i
onlin
edit
c
2009
cambridg
up
draft
â©
april
1
2009
cambridg
univers
press
feedback
welcom
xxxi
prefac
as
recent
as
the
1990
studi
show
that
most
peopl
prefer
get
inform
from
other
peopl
rather
than
from
inform
retriev
system
of
cours
in
that
time
period
most
peopl
also
use
human
travel
agent
to
book
their
travel
howev
dure
the
last
decad
relentless
optim
of
inform
retriev
effect
ha
driven
web
search
engin
to
new
qualiti
level
where
most
peopl
are
satisfi
most
of
the
time
and
web
search
ha
becom
a
standard
and
often
prefer
sourc
of
inform
find
for
exampl
the
2004
pew
internet
survey
fallow
2004
found
that
â€œ92%
of
internet
user
say
the
internet
is
a
good
place
to
go
for
get
everyday
information.â€
to
the
surpris
of
mani
the
field
of
inform
retriev
ha
move
from
be
a
primarili
academ
disciplin
to
be
the
basi
underli
most
peopleâ€™
prefer
mean
of
inform
access
thi
book
present
the
scientif
underpin
of
thi
field
at
a
level
access
to
graduat
student
as
well
as
advanc
undergradu
inform
retriev
did
not
begin
with
the
web
in
respons
to
variou
challeng
of
provid
inform
access
the
field
of
inform
retriev
evolv
to
give
principl
approach
to
search
variou
form
of
content
the
field
began
with
scientif
public
and
librari
record
but
soon
spread
to
other
form
of
content
particularli
those
of
inform
profession
such
as
journalist
lawyer
and
doctor
much
of
the
scientif
research
on
inform
retriev
ha
occur
in
these
context
and
much
of
the
continu
practic
of
inform
retriev
deal
with
provid
access
to
unstructur
inform
in
variou
corpor
and
government
domain
and
thi
work
form
much
of
the
foundat
of
our
book
nevertheless
in
recent
year
a
princip
driver
of
innov
ha
been
the
world
wide
web
unleash
public
at
the
scale
of
ten
of
million
of
content
creator
thi
explos
of
publish
inform
would
be
moot
if
the
inform
could
not
be
found
annot
and
analyz
so
that
each
user
can
quickli
find
inform
that
is
both
relev
and
comprehens
for
their
need
by
the
late
1990
mani
peopl
felt
that
continu
to
index
onlin
edit
c
2009
cambridg
up
xxxii
prefac
the
whole
web
would
rapidli
becom
imposs
due
to
the
webâ€™
exponenti
growth
in
size
but
major
scientif
innov
superb
engin
the
rapidli
declin
price
of
comput
hardwar
and
the
rise
of
a
commerci
underpin
for
web
search
have
all
conspir
to
power
todayâ€™
major
search
engin
which
are
abl
to
provid
high-qual
result
within
subsecond
respons
time
for
hundr
of
million
of
search
a
day
over
billion
of
web
page
book
organ
and
cours
develop
thi
book
is
the
result
of
a
seri
of
cours
we
have
taught
at
stanford
univers
and
at
the
univers
of
stuttgart
in
a
rang
of
durat
includ
a
singl
quarter
one
semest
and
two
quarter
these
cours
were
aim
at
early-stag
graduat
student
in
comput
scienc
but
we
have
also
had
enrol
from
upper-class
comput
scienc
undergradu
as
well
as
student
from
law
medic
informat
statist
linguist
and
variou
engin
disciplin
the
key
design
principl
for
thi
book
therefor
wa
to
cover
what
we
believ
to
be
import
in
a
one-term
graduat
cours
on
inform
retriev
an
addit
principl
is
to
build
each
chapter
around
materi
that
we
believ
can
be
cover
in
a
singl
lectur
of
75
to
90
minut
the
first
eight
chapter
of
the
book
are
devot
to
the
basic
of
inform
retriev
and
in
particular
the
heart
of
search
engin
we
consid
thi
materi
to
be
core
to
ani
cours
on
inform
retriev
chapter
1
introduc
invert
index
and
show
how
simpl
boolean
queri
can
be
process
use
such
index
chapter
2
build
on
thi
introduct
by
detail
the
manner
in
which
document
are
preprocess
befor
index
and
by
discuss
how
invert
index
are
augment
in
variou
way
for
function
and
speed
chapter
3
discuss
search
structur
for
dictionari
and
how
to
process
queri
that
have
spell
error
and
other
imprecis
match
to
the
vocabulari
in
the
document
collect
be
search
chapter
4
describ
a
number
of
algorithm
for
construct
the
invert
index
from
a
text
collect
with
particular
attent
to
highli
scalabl
and
distribut
algorithm
that
can
be
appli
to
veri
larg
collect
chapter
5
cover
techniqu
for
compress
dictionari
and
invert
index
these
techniqu
are
critic
for
achiev
subsecond
respons
time
to
user
queri
in
larg
search
engin
the
index
and
queri
consid
in
chapter
1â€“5
onli
deal
with
boolean
retriev
in
which
a
document
either
match
a
queri
or
doe
not
a
desir
to
measur
the
extent
to
which
a
document
match
a
queri
or
the
score
of
a
document
for
a
queri
motiv
the
develop
of
term
weight
and
the
comput
of
score
in
chapter
6
and
7
lead
to
the
idea
of
a
list
of
document
that
are
rank-ord
for
a
queri
chapter
8
focus
on
the
evalu
of
an
inform
retriev
system
base
on
the
onlin
edit
c
2009
cambridg
up
prefac
xxxiii
relev
of
the
document
it
retriev
allow
us
to
compar
the
rel
perform
of
differ
system
on
benchmark
document
collect
and
queri
chapter
9â€“21
build
on
the
foundat
of
the
first
eight
chapter
to
cover
a
varieti
of
more
advanc
topic
chapter
9
discuss
method
by
which
retriev
can
be
enhanc
through
the
use
of
techniqu
like
relev
feedback
and
queri
expans
which
aim
at
increas
the
likelihood
of
retriev
relev
document
chapter
10
consid
inform
retriev
from
document
that
are
structur
with
markup
languag
like
xml
and
html
we
treat
structur
retriev
by
reduc
it
to
the
vector
space
score
method
develop
in
chapter
6
chapter
11
and
12
invok
probabl
theori
to
comput
score
for
document
on
queri
chapter
11
develop
tradit
probabilist
inform
retriev
which
provid
a
framework
for
comput
the
probabl
of
relev
of
a
document
given
a
set
of
queri
term
thi
probabl
may
then
be
use
as
a
score
in
rank
chapter
12
illustr
an
altern
wherein
for
each
document
in
a
collect
we
build
a
languag
model
from
which
one
can
estim
a
probabl
that
the
languag
model
gener
a
given
queri
thi
probabl
is
anoth
quantiti
with
which
we
can
rank-ord
document
chapter
13â€“17
give
a
treatment
of
variou
form
of
machin
learn
and
numer
method
in
inform
retriev
chapter
13â€“15
treat
the
problem
of
classifi
document
into
a
set
of
known
categori
given
a
set
of
document
along
with
the
class
they
belong
to
chapter
13
motiv
statist
classif
as
one
of
the
key
technolog
need
for
a
success
search
engin
introduc
naiv
bay
a
conceptu
simpl
and
effici
text
classif
method
and
outlin
the
standard
methodolog
for
evalu
text
classifi
chapter
14
employ
the
vector
space
model
from
chapter
6
and
introduc
two
classif
method
rocchio
and
knn
that
oper
on
document
vector
it
also
present
the
bias-vari
tradeoff
as
an
import
character
of
learn
problem
that
provid
criteria
for
select
an
appropri
method
for
a
text
classif
problem
chapter
15
introduc
support
vector
machin
which
mani
research
current
view
as
the
most
effect
text
classif
method
we
also
develop
connect
in
thi
chapter
between
the
problem
of
classif
and
seemingli
dispar
topic
such
as
the
induct
of
score
function
from
a
set
of
train
exampl
chapter
16â€“18
consid
the
problem
of
induc
cluster
of
relat
document
from
a
collect
in
chapter
16
we
first
give
an
overview
of
a
number
of
import
applic
of
cluster
in
inform
retriev
we
then
describ
two
flat
cluster
algorithm
the
k-mean
algorithm
an
effici
and
wide
use
document
cluster
method
and
the
expectationmaxim
algorithm
which
is
comput
more
expens
but
also
more
flexibl
chapter
17
motiv
the
need
for
hierarch
structur
onlin
edit
c
2009
cambridg
up
xxxiv
prefac
cluster
instead
of
flat
cluster
in
mani
applic
in
inform
retriev
and
introduc
a
number
of
cluster
algorithm
that
produc
a
hierarchi
of
cluster
the
chapter
also
address
the
difficult
problem
of
automat
comput
label
for
cluster
chapter
18
develop
method
from
linear
algebra
that
constitut
an
extens
of
cluster
and
also
offer
intrigu
prospect
for
algebra
method
in
inform
retriev
which
have
been
pursu
in
the
approach
of
latent
semant
index
chapter
19â€“21
treat
the
problem
of
web
search
we
give
in
chapter
19
a
summari
of
the
basic
challeng
in
web
search
togeth
with
a
set
of
techniqu
that
are
pervas
in
web
inform
retriev
next
chapter
20
describ
the
architectur
and
requir
of
a
basic
web
crawler
final
chapter
21
consid
the
power
of
link
analysi
in
web
search
use
in
the
process
sever
method
from
linear
algebra
and
advanc
probabl
theori
thi
book
is
not
comprehens
in
cover
all
topic
relat
to
inform
retriev
we
have
put
asid
a
number
of
topic
which
we
deem
outsid
the
scope
of
what
we
wish
to
cover
in
an
introduct
to
inform
retriev
class
nevertheless
for
peopl
interest
in
these
topic
we
provid
a
few
pointer
to
mainli
textbook
coverag
here
cross-languag
ir
grossman
and
frieder
2004
ch
4
and
oard
and
dorr
1996
imag
and
multimedia
ir
grossman
and
frieder
2004
ch
4
baeza-y
and
ribeiro-neto
1999
ch
6
baeza-y
and
ribeiro-neto
1999
ch
11
baeza-y
and
ribeiro-neto
1999
ch
12
del
bimbo
1999
lew
2001
and
smeulder
et
al
2000
speech
retriev
coden
et
al
2002
music
retriev
downi
2006
and
http://www.ismir.net/
user
interfac
for
ir
baeza-y
and
ribeiro-neto
1999
ch
10
parallel
and
peer-to-p
ir
grossman
and
frieder
2004
ch
7
baeza-y
and
ribeiro-neto
1999
ch
9
and
aber
2001
digit
librari
baeza-y
and
ribeiro-neto
1999
ch
15
and
lesk
2004
inform
scienc
perspect
korfhag
1997
meadow
et
al
1999
and
ingwersen
and
jã¤rvelin
2005
logic-bas
approach
to
ir
van
rijsbergen
1989
natur
languag
process
techniqu
man
and
schã¼tze
1999
jurafski
and
martin
2008
and
lewi
and
jone
1996
onlin
edit
c
2009
cambridg
up
prefac
xxxv
prerequisit
introductori
cours
in
data
structur
and
algorithm
in
linear
algebra
and
in
probabl
theori
suffic
as
prerequisit
for
all
21
chapter
we
now
give
more
detail
for
the
benefit
of
reader
and
instructor
who
wish
to
tailor
their
read
to
some
of
the
chapter
chapter
1â€“5
assum
as
prerequisit
a
basic
cours
in
algorithm
and
data
structur
chapter
6
and
7
requir
in
addit
a
knowledg
of
basic
linear
algebra
includ
vector
and
dot
product
no
addit
prerequisit
are
assum
until
chapter
11
where
a
basic
cours
in
probabl
theori
is
requir
section
11.1
give
a
quick
review
of
the
concept
necessari
in
chapter
11â€“13
chapter
15
assum
that
the
reader
is
familiar
with
the
notion
of
nonlinear
optim
although
the
chapter
may
be
read
without
detail
knowledg
of
algorithm
for
nonlinear
optim
chapter
18
demand
a
first
cours
in
linear
algebra
includ
familiar
with
the
notion
of
matrix
rank
and
eigenvector
a
brief
review
is
given
in
section
18.1
the
knowledg
of
eigenvalu
and
eigenvector
is
also
necessari
in
chapter
21
book
layout
âœž
work
exampl
in
the
text
appear
with
a
pencil
sign
next
to
them
in
the
left
margin
advanc
or
difficult
materi
appear
in
section
or
subsect
âœ„
indic
with
scissor
in
the
margin
exercis
are
mark
in
the
margin
with
a
question
mark
the
level
of
difficulti
of
exercis
is
indic
as
easi
â‹†
medium
â‹†â‹†
or
difficult
â‹†
â‹†
â‹†
?
acknowledg
we
would
like
to
thank
cambridg
univers
press
for
allow
us
to
make
the
draft
book
avail
onlin
which
facilit
much
of
the
feedback
we
have
receiv
while
write
the
book
we
also
thank
lauren
cowl
who
ha
been
an
outstand
editor
provid
sever
round
of
comment
on
each
chapter
on
matter
of
style
organ
and
coverag
as
well
as
detail
comment
on
the
subject
matter
of
the
book
to
the
extent
that
we
have
achiev
our
goal
in
write
thi
book
she
deserv
an
import
part
of
the
credit
we
are
veri
grate
to
the
mani
peopl
who
have
given
us
comment
suggest
and
correct
base
on
draft
version
of
thi
book
we
thank
for
provid
variou
correct
and
comment
cheryl
aasheim
josh
attenberg
daniel
beck
luc
bã©langer
georg
buscher
tom
breuel
daniel
burckhardt
fazli
can
dinquan
chen
stephen
clark
ernest
davi
pedro
domingo
rodrigo
panchiniak
fernand
paolo
ferragina
alex
fraser
norbert
onlin
edit
c
2009
cambridg
up
xxxvi
prefac
fuhr
vignesh
ganapathi
elmer
garduno
xiubo
geng
david
gondek
sergio
govoni
corinna
habet
ben
handi
donna
harman
benjamin
haskel
thoma
hã¼hn
deepak
jain
ralf
jankowitsch
dinakar
jayarajan
vinay
kakad
mei
kobayashi
wessel
kraaij
rick
lafleur
florian
law
hang
li
david
losada
david
mann
ennio
masi
sven
meyer
zu
eissen
alexand
murzaku
gonzalo
navarro
frank
mccown
paul
mcname
christoph
mã¼ller
scott
olsson
tao
qin
megha
raghavan
michal
rosen-zvi
klau
rothenhã¤usl
kenyu
l
runner
alexand
salamanca
grigori
sapunov
evgeni
shadchnev
tobia
scheffer
nico
schlaefer
ian
soboroff
benno
stein
marcin
sydow
andrew
turner
jason
utt
huey
vo
travi
wade
mike
walsh
changliang
wang
renj
wang
and
thoma
zeum
mani
peopl
gave
us
detail
feedback
on
individu
chapter
either
at
our
request
or
through
their
own
initi
for
thi
weâ€™r
particularli
grate
to
jame
allan
omar
alonso
ismail
sengor
altingovd
vo
ngoc
anh
roi
blanco
eric
breck
eric
brown
mark
carman
carlo
castillo
junghoo
cho
aron
culotta
doug
cut
meghana
deodhar
susan
dumai
johann
fã¼rnkranz
andrea
heãÿ
djoerd
hiemstra
david
hull
thorsten
joachim
siddharth
jonathan
j
b
jaap
kamp
mounia
lalma
ami
langvil
nichola
lester
dave
lewi
daniel
lowd
yosi
mass
jeff
michel
alessandro
moschitti
amir
najmi
marc
najork
giorgio
maria
di
nunzio
paul
ogilvi
priyank
patel
jan
pedersen
kathryn
pede
vassili
plachoura
daniel
ramag
ghulam
raza
stefan
riezler
michael
schiehlen
helmut
schmid
falk
nicola
scholer
sabin
schult
im
wald
fabrizio
sebastiani
sarabjeet
singh
valentin
spitkovski
alexand
strehl
john
tait
shivakumar
vaithyanathan
ellen
voorhe
gerhard
weikum
dawid
weiss
yime
yang
yisong
yue
jian
zhang
and
justin
zobel
and
final
there
were
a
few
review
who
absolut
stood
out
in
term
of
the
qualiti
and
quantiti
of
comment
that
they
provid
we
thank
them
for
their
signific
impact
on
the
content
and
structur
of
the
book
we
express
our
gratitud
to
pavel
berkhin
stefan
bã¼ttcher
jami
callan
byron
dom
torsten
suel
and
andrew
trotman
part
of
the
initi
draft
of
chapter
13â€“15
were
base
on
slide
that
were
gener
provid
by
ray
mooney
while
the
materi
ha
gone
through
extens
revis
we
grate
acknowledg
rayâ€™
contribut
to
the
three
chapter
in
gener
and
to
the
descript
of
the
time
complex
of
text
classif
algorithm
in
particular
the
abov
is
unfortun
an
incomplet
list
we
are
still
in
the
process
of
incorpor
feedback
we
have
receiv
and
like
all
opinion
author
we
did
not
alway
heed
the
advic
that
wa
so
freeli
given
the
publish
version
of
the
chapter
remain
sole
the
respons
of
the
author
the
author
thank
stanford
univers
and
the
univers
of
stuttgart
for
provid
a
stimul
academ
environ
for
discuss
idea
and
the
opportun
to
teach
cours
from
which
thi
book
aros
and
in
which
it
onlin
edit
c
2009
cambridg
up
prefac
xxxvii
content
were
refin
cm
thank
hi
famili
for
the
mani
hour
theyâ€™v
let
him
spend
work
on
thi
book
and
hope
heâ€™ll
have
a
bit
more
free
time
on
weekend
next
year
pr
thank
hi
famili
for
their
patient
support
through
the
write
of
thi
book
and
is
also
grate
to
yahoo
inc
for
provid
a
fertil
environ
in
which
to
work
on
thi
book
hs
would
like
to
thank
hi
parent
famili
and
friend
for
their
support
while
write
thi
book
web
and
contact
inform
thi
book
ha
a
companion
websit
at
http://informationretrieval.org
as
well
as
link
to
some
more
gener
resourc
it
is
our
intent
to
maintain
on
thi
websit
a
set
of
slide
for
each
chapter
which
may
be
use
for
the
correspond
lectur
we
gladli
welcom
further
feedback
correct
and
suggest
on
the
book
which
may
be
sent
to
all
the
author
at
informationretriev
at
yahoogroup
dot
com
onlin
edit
c
2009
cambridg
up
draft
â©
april
1
2009
cambridg
univers
press
feedback
welcom
1
1
boolean
retriev
the
mean
of
the
term
inform
retriev
can
be
veri
broad
just
get
a
credit
card
out
of
your
wallet
so
that
you
can
type
in
the
card
number
is
a
form
of
inform
retriev
howev
as
an
academ
field
of
studi
inform
inform
retriev
might
be
defin
thu
retriev
inform
retriev
ir
is
find
materi
usual
document
of
an
unstructur
natur
usual
text
that
satisfi
an
inform
need
from
within
larg
collect
usual
store
on
comput
as
defin
in
thi
way
inform
retriev
use
to
be
an
activ
that
onli
a
few
peopl
engag
in
refer
librarian
paraleg
and
similar
profession
searcher
now
the
world
ha
chang
and
hundr
of
million
of
peopl
engag
in
inform
retriev
everi
day
when
they
use
a
web
search
engin
or
search
their
email.1
inform
retriev
is
fast
becom
the
domin
form
of
inform
access
overtak
tradit
databasestyl
search
the
sort
that
is
go
on
when
a
clerk
say
to
you
â€œiâ€™m
sorri
i
can
onli
look
up
your
order
if
you
can
give
me
your
order
idâ€
ir
can
also
cover
other
kind
of
data
and
inform
problem
beyond
that
specifi
in
the
core
definit
abov
the
term
â€œunstructur
dataâ€
refer
to
data
which
doe
not
have
clear
semant
overt
easy-for-a-comput
structur
it
is
the
opposit
of
structur
data
the
canon
exampl
of
which
is
a
relat
databas
of
the
sort
compani
usual
use
to
maintain
product
inventori
and
personnel
record
in
realiti
almost
no
data
are
truli
â€œunstructuredâ€
thi
is
definit
true
of
all
text
data
if
you
count
the
latent
linguist
structur
of
human
languag
but
even
accept
that
the
intend
notion
of
structur
is
overt
structur
most
text
ha
structur
such
as
head
and
paragraph
and
footnot
which
is
commonli
repres
in
document
by
explicit
markup
such
as
the
code
underli
web
1
in
modern
parlanc
the
word
â€œsearchâ€
ha
tend
to
replac
â€œ(inform
retrievalâ€
the
term
â€œsearchâ€
is
quit
ambigu
but
in
context
we
use
the
two
synonym
onlin
edit
c
2009
cambridg
up
2
1
boolean
retriev
page
ir
is
also
use
to
facilit
â€œsemistructuredâ€
search
such
as
find
a
document
where
the
titl
contain
java
and
the
bodi
contain
thread
the
field
of
inform
retriev
also
cover
support
user
in
brows
or
filter
document
collect
or
further
process
a
set
of
retriev
document
given
a
set
of
document
cluster
is
the
task
of
come
up
with
a
good
group
of
the
document
base
on
their
content
it
is
similar
to
arrang
book
on
a
bookshelf
accord
to
their
topic
given
a
set
of
topic
stand
inform
need
or
other
categori
such
as
suitabl
of
text
for
differ
age
group
classif
is
the
task
of
decid
which
class(
if
ani
each
of
a
set
of
document
belong
to
it
is
often
approach
by
first
manual
classifi
some
document
and
then
hope
to
be
abl
to
classifi
new
document
automat
inform
retriev
system
can
also
be
distinguish
by
the
scale
at
which
they
oper
and
it
is
use
to
distinguish
three
promin
scale
in
web
search
the
system
ha
to
provid
search
over
billion
of
document
store
on
million
of
comput
distinct
issu
are
need
to
gather
document
for
index
be
abl
to
build
system
that
work
effici
at
thi
enorm
scale
and
handl
particular
aspect
of
the
web
such
as
the
exploit
of
hypertext
and
not
be
fool
by
site
provid
manipul
page
content
in
an
attempt
to
boost
their
search
engin
rank
given
the
commerci
import
of
the
web
we
focu
on
all
these
issu
in
chapter
19â€“21
at
the
other
extrem
is
person
inform
retriev
in
the
last
few
year
consum
oper
system
have
integr
inform
retriev
such
as
appleâ€™
mac
os
x
spotlight
or
window
vistaâ€™
instant
search
email
program
usual
not
onli
provid
search
but
also
text
classif
they
at
least
provid
a
spam
junk
mail
filter
and
commonli
also
provid
either
manual
or
automat
mean
for
classifi
mail
so
that
it
can
be
place
directli
into
particular
folder
distinct
issu
here
includ
handl
the
broad
rang
of
document
type
on
a
typic
person
comput
and
make
the
search
system
mainten
free
and
suffici
lightweight
in
term
of
startup
process
and
disk
space
usag
that
it
can
run
on
one
machin
without
annoy
it
owner
in
between
is
the
space
of
enterpris
institut
and
domain-specif
search
where
retriev
might
be
provid
for
collect
such
as
a
corporationâ€™
intern
document
a
databas
of
patent
or
research
articl
on
biochemistri
in
thi
case
the
document
will
typic
be
store
on
central
file
system
and
one
or
a
hand
of
dedic
machin
will
provid
search
over
the
collect
thi
book
contain
techniqu
of
valu
over
thi
whole
spectrum
but
our
coverag
of
some
aspect
of
parallel
and
distribut
search
in
web-scal
search
system
is
compar
light
owe
to
the
rel
small
publish
literatur
on
the
detail
of
such
system
howev
outsid
of
a
hand
of
web
search
compani
a
softwar
develop
is
most
like
to
encount
the
person
search
and
enterpris
scenario
onlin
edit
c
2009
cambridg
up
1.1
an
exampl
inform
retriev
problem
3
in
thi
chapter
we
begin
with
a
veri
simpl
exampl
of
an
inform
retriev
problem
and
introduc
the
idea
of
a
term-docu
matrix
section
1.1
and
the
central
invert
index
data
structur
section
1.2
we
will
then
examin
the
boolean
retriev
model
and
how
boolean
queri
are
process
section
1.3
and
1.4
1.1
an
exampl
inform
retriev
problem
a
fat
book
which
mani
peopl
own
is
shakespeareâ€™
collect
work
suppos
you
want
to
determin
which
play
of
shakespear
contain
the
word
brutu
and
caesar
and
not
calpurnia
one
way
to
do
that
is
to
start
at
the
begin
and
to
read
through
all
the
text
note
for
each
play
whether
it
contain
brutu
and
caesar
and
exclud
it
from
consider
if
it
contain
calpurnia
the
simplest
form
of
document
retriev
is
for
a
comput
to
do
thi
sort
of
linear
scan
through
document
thi
process
is
commonli
grep
refer
to
as
grep
through
text
after
the
unix
command
grep
which
perform
thi
process
grep
through
text
can
be
a
veri
effect
process
especi
given
the
speed
of
modern
comput
and
often
allow
use
possibl
for
wildcard
pattern
match
through
the
use
of
regular
express
with
modern
comput
for
simpl
queri
of
modest
collect
the
size
of
shakespeareâ€™
collect
work
is
a
bit
under
one
million
word
of
text
in
total
you
realli
need
noth
more
but
for
mani
purpos
you
do
need
more
1
to
process
larg
document
collect
quickli
the
amount
of
onlin
data
ha
grown
at
least
as
quickli
as
the
speed
of
comput
and
we
would
now
like
to
be
abl
to
search
collect
that
total
in
the
order
of
billion
to
trillion
of
word
2
to
allow
more
flexibl
match
oper
for
exampl
it
is
impract
to
perform
the
queri
roman
near
countrymen
with
grep
where
near
might
be
defin
as
â€œwithin
5
wordsâ€
or
â€œwithin
the
same
sentenceâ€
3
to
allow
rank
retriev
in
mani
case
you
want
the
best
answer
to
an
inform
need
among
mani
document
that
contain
certain
word
index
the
way
to
avoid
linearli
scan
the
text
for
each
queri
is
to
index
the
document
in
advanc
let
us
stick
with
shakespeareâ€™
collect
work
and
use
it
to
introduc
the
basic
of
the
boolean
retriev
model
suppos
we
record
for
each
document
â€“
here
a
play
of
shakespeareâ€™
â€“
whether
it
contain
each
word
out
of
all
the
word
shakespear
use
shakespear
use
incid
matrix
about
32,000
differ
word
the
result
is
a
binari
term-docu
incid
term
matrix
as
in
figur
1.1
term
are
the
index
unit
further
discuss
in
section
2.2
they
are
usual
word
and
for
the
moment
you
can
think
of
onlin
edit
c
2009
cambridg
up
4
1
boolean
retriev
antoni
juliu
the
hamlet
othello
macbeth



and
caesar
tempest
cleopatra
antoni
1
1
0
0
0
1
brutu
1
1
0
1
0
0
caesar
1
1
0
1
1
1
calpurnia
0
1
0
0
0
0
cleopatra
1
0
0
0
0
0
merci
1
0
1
1
1
1
worser
1
0
1
1
1
0



â—®
figur
1.1
a
term-docu
incid
matrix
matrix
element
t
d
is
1
if
the
play
in
column
d
contain
the
word
in
row
t
and
is
0
otherwis
them
as
word
but
the
inform
retriev
literatur
normal
speak
of
term
becaus
some
of
them
such
as
perhap
i-9
or
hong
kong
are
not
usual
thought
of
as
word
now
depend
on
whether
we
look
at
the
matrix
row
or
column
we
can
have
a
vector
for
each
term
which
show
the
document
it
appear
in
or
a
vector
for
each
document
show
the
term
that
occur
in
it.2
to
answer
the
queri
brutu
and
caesar
and
not
calpurnia
we
take
the
vector
for
brutu
caesar
and
calpurnia
complement
the
last
and
then
do
a
bitwis
and
110100
and
110111
and
101111
=
100100
the
answer
for
thi
queri
are
thu
antoni
and
cleopatra
and
hamlet
figur
1.2
boolean
retriev
the
boolean
retriev
model
is
a
model
for
inform
retriev
in
which
we
model
can
pose
ani
queri
which
is
in
the
form
of
a
boolean
express
of
term
that
is
in
which
term
are
combin
with
the
oper
and
or
and
not
the
model
view
each
document
as
just
a
set
of
word
let
us
now
consid
a
more
realist
scenario
simultan
use
the
opportun
to
introduc
some
terminolog
and
notat
suppos
we
have
document
n
=
1
million
document
by
document
we
mean
whatev
unit
we
have
decid
to
build
a
retriev
system
over
they
might
be
individu
memo
or
chapter
of
a
book
see
section
2.1.2
page
20
for
further
discuss
we
will
refer
to
the
group
of
document
over
which
we
perform
retriev
as
the
collect
document
collect
it
is
sometim
also
refer
to
as
a
corpu
a
bodi
of
corpu
text
suppos
each
document
is
about
1000
word
long
2â€“3
book
page
if
2
formal
we
take
the
transpos
of
the
matrix
to
be
abl
to
get
the
term
as
column
vector
onlin
edit
c
2009
cambridg
up
1.1
an
exampl
inform
retriev
problem
5
antoni
and
cleopatra
act
iii
scene
ii
agrippa
asid
to
domitiu
enobarbu
whi
enobarbu
when
antoni
found
juliu
caesar
dead
he
cri
almost
to
roar
and
he
wept
when
at
philippi
he
found
brutu
slain
hamlet
act
iii
scene
ii
lord
poloniu
i
did
enact
juliu
caesar
i
wa
kill
iâ€™
the
capitol
brutu
kill
me
â—®
figur
1.2
result
from
shakespear
for
the
queri
brutu
and
caesar
and
not
calpurnia
we
assum
an
averag
of
6
byte
per
word
includ
space
and
punctuat
then
thi
is
a
document
collect
about
6
gb
in
size
typic
there
might
be
about
m
=
500,000
distinct
term
in
these
document
there
is
noth
special
about
the
number
we
have
chosen
and
they
might
vari
by
an
order
of
magnitud
or
more
but
they
give
us
some
idea
of
the
dimens
of
the
kind
of
problem
we
need
to
handl
we
will
discuss
and
model
these
size
assumpt
in
section
5.1
page
86
ad
hoc
retriev
our
goal
is
to
develop
a
system
to
address
the
ad
hoc
retriev
task
thi
is
the
most
standard
ir
task
in
it
a
system
aim
to
provid
document
from
within
the
collect
that
are
relev
to
an
arbitrari
user
inform
need
commun
to
the
system
by
mean
of
a
one-off
user-initi
queri
an
inform
need
inform
need
is
the
topic
about
which
the
user
desir
to
know
more
and
queri
is
differenti
from
a
queri
which
is
what
the
user
convey
to
the
comput
in
an
attempt
to
commun
the
inform
need
a
document
is
relev
relev
if
it
is
one
that
the
user
perceiv
as
contain
inform
of
valu
with
respect
to
their
person
inform
need
our
exampl
abov
wa
rather
artifici
in
that
the
inform
need
wa
defin
in
term
of
particular
word
wherea
usual
a
user
is
interest
in
a
topic
like
â€œpipelin
leaksâ€
and
would
like
to
find
relev
document
regardless
of
whether
they
precis
use
those
word
or
express
the
concept
with
other
word
such
as
effect
pipelin
ruptur
to
assess
the
effect
of
an
ir
system
i.e
the
qualiti
of
it
search
result
a
user
will
usual
want
to
know
two
key
statist
about
the
systemâ€™
return
result
for
a
queri
precis
precis
what
fraction
of
the
return
result
are
relev
to
the
inform
need?
recal
recal
what
fraction
of
the
relev
document
in
the
collect
were
return
by
the
system?
onlin
edit
c
2009
cambridg
up
6
1
boolean
retriev
detail
discuss
of
relev
and
evalu
measur
includ
precis
and
recal
is
found
in
chapter
8
we
now
cannot
build
a
term-docu
matrix
in
a
naiv
way
a
500k
ã—
1m
matrix
ha
half-a-trillion
0â€™
and
1â€™
â€“
too
mani
to
fit
in
a
computerâ€™
memori
but
the
crucial
observ
is
that
the
matrix
is
extrem
spars
that
is
it
ha
few
non-zero
entri
becaus
each
document
is
1000
word
long
the
matrix
ha
no
more
than
one
billion
1â€™
so
a
minimum
of
99.8%
of
the
cell
are
zero
a
much
better
represent
is
to
record
onli
the
thing
that
do
occur
that
is
the
1
posit
thi
idea
is
central
to
the
first
major
concept
in
inform
retriev
the
invert
index
invert
index
the
name
is
actual
redund
an
index
alway
map
back
from
term
to
the
part
of
a
document
where
they
occur
nevertheless
invert
index
or
sometim
invert
file
ha
becom
the
standard
term
in
inform
retrieval.3
the
basic
idea
of
an
invert
index
is
shown
in
figur
1.3
dictionari
we
keep
a
dictionari
of
term
sometim
also
refer
to
as
a
vocabulari
or
vocabulari
lexicon
in
thi
book
we
use
dictionari
for
the
data
structur
and
vocabulari
lexicon
for
the
set
of
term
then
for
each
term
we
have
a
list
that
record
which
document
the
term
occur
in
each
item
in
the
list
â€“
which
record
that
a
term
appear
in
a
document
and
later
often
the
posit
in
the
document
â€“
is
convent
call
a
post
4
post
the
list
is
then
call
a
post
post
list
list
or
invert
list
and
all
the
post
list
taken
togeth
are
refer
to
as
post
the
post
the
dictionari
in
figur
1.3
ha
been
sort
alphabet
and
each
post
list
is
sort
by
document
id
we
will
see
whi
thi
is
use
in
section
1.3
below
but
later
we
will
also
consid
altern
to
do
thi
section
7.1.5
1.2
a
first
take
at
build
an
invert
index
to
gain
the
speed
benefit
of
index
at
retriev
time
we
have
to
build
the
index
in
advanc
the
major
step
in
thi
are
1
collect
the
document
to
be
index
friend
roman
countrymen
so
let
it
be
with
caesar



2
token
the
text
turn
each
document
into
a
list
of
token
friend
roman
countrymen
so



3
some
inform
retriev
research
prefer
the
term
invert
file
but
express
like
index
construct
and
index
compress
are
much
more
common
than
invert
file
construct
and
invert
file
compress
for
consist
we
use
invert
index
throughout
thi
book
4
in
a
non-posit
invert
index
a
post
is
just
a
document
id
but
it
is
inher
associ
with
a
term
via
the
post
list
it
is
place
on
sometim
we
will
also
talk
of
a
term
docid
pair
as
a
post
onlin
edit
c
2009
cambridg
up
1.2
a
first
take
at
build
an
invert
index
7
brutu
âˆ’â†’
1
2
4
11
31
45
173
174
caesar
âˆ’â†’
1
2
4
5
6
16
57
132



calpurnia
âˆ’â†’
2
31
54
101



|
{z
}
|
{z
}
dictionari
post
â—®
figur
1.3
the
two
part
of
an
invert
index
the
dictionari
is
commonli
kept
in
memori
with
pointer
to
each
post
list
which
is
store
on
disk
3
do
linguist
preprocess
produc
a
list
of
normal
token
which
are
the
index
term
friend
roman
countryman
so



4
index
the
document
that
each
term
occur
in
by
creat
an
invert
index
consist
of
a
dictionari
and
post
we
will
defin
and
discuss
the
earlier
stage
of
process
that
is
step
1â€“3
in
section
2.2
page
22
until
then
you
can
think
of
token
and
normal
token
as
also
loos
equival
to
word
here
we
assum
that
the
first
3
step
have
alreadi
been
done
and
we
examin
build
a
basic
invert
index
by
sort-bas
index
within
a
document
collect
we
assum
that
each
document
ha
a
uniqu
docid
serial
number
known
as
the
document
identifi
docid
dure
index
construct
we
can
simpli
assign
success
integ
to
each
new
document
when
it
is
first
encount
the
input
to
index
is
a
list
of
normal
token
for
each
document
which
we
can
equal
think
of
as
a
list
of
pair
of
sort
term
and
docid
as
in
figur
1.4
the
core
index
step
is
sort
thi
list
so
that
the
term
are
alphabet
give
us
the
represent
in
the
middl
column
of
figur
1.4
multipl
occurr
of
the
same
term
from
the
same
document
are
then
merged.5
instanc
of
the
same
term
are
then
group
and
the
result
is
split
into
a
dictionari
and
post
as
shown
in
the
right
column
of
figur
1.4
sinc
a
term
gener
occur
in
a
number
of
document
thi
data
organ
alreadi
reduc
the
storag
requir
of
the
index
the
dictionari
also
record
some
statist
such
as
the
number
of
document
document
which
contain
each
term
the
document
frequenc
which
is
here
frequenc
also
the
length
of
each
post
list
thi
inform
is
not
vital
for
a
basic
boolean
search
engin
but
it
allow
us
to
improv
the
effici
of
the
5
unix
user
can
note
that
these
step
are
similar
to
use
of
the
sort
and
then
uniq
command
onlin
edit
c
2009
cambridg
up
8
1
boolean
retriev
doc
1
doc
2
i
did
enact
juliu
caesar
i
wa
kill
iâ€™
the
capitol
brutu
kill
me
so
let
it
be
with
caesar
the
nobl
brutu
hath
told
you
caesar
wa
ambiti
term
docid
i
1
did
1
enact
1
juliu
1
caesar
1
i
1
wa
1
kill
1
iâ€™
1
the
1
capitol
1
brutu
1
kill
1
me
1
so
2
let
2
it
2
be
2
with
2
caesar
2
the
2
nobl
2
brutu
2
hath
2
told
2
you
2
caesar
2
wa
2
ambiti
2
=â‡’
term
docid
ambiti
2
be
2
brutu
1
brutu
2
capitol
1
caesar
1
caesar
2
caesar
2
did
1
enact
1
hath
1
i
1
i
1
iâ€™
1
it
2
juliu
1
kill
1
kill
1
let
2
me
1
nobl
2
so
2
the
1
the
2
told
2
you
2
wa
1
wa
2
with
2
=â‡’
term
doc
freq
â†’
post
list
ambiti
1
â†’
2
be
1
â†’
2
brutu
2
â†’
1
â†’
2
capitol
1
â†’
1
caesar
2
â†’
1
â†’
2
did
1
â†’
1
enact
1
â†’
1
hath
1
â†’
2
i
1
â†’
1
iâ€™
1
â†’
1
it
1
â†’
2
juliu
1
â†’
1
kill
1
â†’
1
let
1
â†’
2
me
1
â†’
1
nobl
1
â†’
2
so
1
â†’
2
the
2
â†’
1
â†’
2
told
1
â†’
2
you
1
â†’
2
wa
2
â†’
1
â†’
2
with
1
â†’
2
â—®
figur
1.4
build
an
index
by
sort
and
group
the
sequenc
of
term
in
each
document
tag
by
their
documentid
left
is
sort
alphabet
middl
instanc
of
the
same
term
are
then
group
by
word
and
then
by
documentid
the
term
and
documentid
are
then
separ
out
right
the
dictionari
store
the
term
and
ha
a
pointer
to
the
post
list
for
each
term
it
commonli
also
store
other
summari
inform
such
as
here
the
document
frequenc
of
each
term
we
use
thi
inform
for
improv
queri
time
effici
and
later
for
weight
in
rank
retriev
model
each
post
list
store
the
list
of
document
in
which
a
term
occur
and
may
store
other
inform
such
as
the
term
frequenc
the
frequenc
of
each
term
in
each
document
or
the
position(
of
the
term
in
each
document
onlin
edit
c
2009
cambridg
up
1.2
a
first
take
at
build
an
invert
index
9
search
engin
at
queri
time
and
it
is
a
statist
later
use
in
mani
rank
retriev
model
the
post
are
secondarili
sort
by
docid
thi
provid
the
basi
for
effici
queri
process
thi
invert
index
structur
is
essenti
without
rival
as
the
most
effici
structur
for
support
ad
hoc
text
search
in
the
result
index
we
pay
for
storag
of
both
the
dictionari
and
the
post
list
the
latter
are
much
larger
but
the
dictionari
is
commonli
kept
in
memori
while
post
list
are
normal
kept
on
disk
so
the
size
of
each
is
import
and
in
chapter
5
we
will
examin
how
each
can
be
optim
for
storag
and
access
effici
what
data
structur
should
be
use
for
a
post
list?
a
fix
length
array
would
be
wast
as
some
word
occur
in
mani
document
and
other
in
veri
few
for
an
in-memori
post
list
two
good
altern
are
singli
link
list
or
variabl
length
array
singli
link
list
allow
cheap
insert
of
document
into
post
list
follow
updat
such
as
when
recrawl
the
web
for
updat
document
and
natur
extend
to
more
advanc
index
strategi
such
as
skip
list
section
2.3
which
requir
addit
pointer
variabl
length
array
win
in
space
requir
by
avoid
the
overhead
for
pointer
and
in
time
requir
becaus
their
use
of
contigu
memori
increas
speed
on
modern
processor
with
memori
cach
extra
pointer
can
in
practic
be
encod
into
the
list
as
offset
if
updat
are
rel
infrequ
variabl
length
array
will
be
more
compact
and
faster
to
travers
we
can
also
use
a
hybrid
scheme
with
a
link
list
of
fix
length
array
for
each
term
when
post
list
are
store
on
disk
they
are
store
perhap
compress
as
a
contigu
run
of
post
without
explicit
pointer
as
in
figur
1.3
so
as
to
minim
the
size
of
the
post
list
and
the
number
of
disk
seek
to
read
a
post
list
into
memori
?
exercis
1.1
â‹†
draw
the
invert
index
that
would
be
built
for
the
follow
document
collect
see
figur
1.3
for
an
exampl
doc
1
new
home
sale
top
forecast
doc
2
home
sale
rise
in
juli
doc
3
increas
in
home
sale
in
juli
doc
4
juli
new
home
sale
rise
exercis
1.2
â‹†
consid
these
document
doc
1
breakthrough
drug
for
schizophrenia
doc
2
new
schizophrenia
drug
doc
3
new
approach
for
treatment
of
schizophrenia
doc
4
new
hope
for
schizophrenia
patient
a
draw
the
term-docu
incid
matrix
for
thi
document
collect
onlin
edit
c
2009
cambridg
up
10
1
boolean
retriev
brutu
âˆ’â†’
1
â†’
2
â†’
4
â†’
11
â†’
31
â†’
45
â†’
173
â†’
174
calpurnia
âˆ’â†’
2
â†’
31
â†’
54
â†’
101
intersect
=â‡’
2
â†’
31
â—®
figur
1.5
intersect
the
post
list
for
brutu
and
calpurnia
from
figur
1.3
b
draw
the
invert
index
represent
for
thi
collect
as
in
figur
1.3
page
7
exercis
1.3
â‹†
for
the
document
collect
shown
in
exercis
1.2
what
are
the
return
result
for
these
queri
a
schizophrenia
and
drug
b
for
and
not(drug
or
approach
1.3
process
boolean
queri
how
do
we
process
a
queri
use
an
invert
index
and
the
basic
boolean
simpl
conjunct
retriev
model?
consid
process
the
simpl
conjunct
queri
queri
1.1
brutu
and
calpurnia
over
the
invert
index
partial
shown
in
figur
1.3
page
7
we
1
locat
brutu
in
the
dictionari
2
retriev
it
post
3
locat
calpurnia
in
the
dictionari
4
retriev
it
post
5
intersect
the
two
post
list
as
shown
in
figur
1.5
post
list
the
intersect
oper
is
the
crucial
one
we
need
to
effici
intersect
intersect
post
list
so
as
to
be
abl
to
quickli
find
document
that
contain
both
post
merg
term
thi
oper
is
sometim
refer
to
as
merg
post
list
thi
slightli
counterintuit
name
reflect
use
the
term
merg
algorithm
for
a
gener
famili
of
algorithm
that
combin
multipl
sort
list
by
interleav
advanc
of
pointer
through
each
here
we
are
merg
the
list
with
a
logic
and
oper
there
is
a
simpl
and
effect
method
of
intersect
post
list
use
the
merg
algorithm
see
figur
1.6
we
maintain
pointer
into
both
list
onlin
edit
c
2009
cambridg
up
1.3
process
boolean
queri
11
intersect(p1

p2
1
answer
â†
h
i
2
while
p1
6=
nil
and
p2
6=
nil
3
do
if
docid(p1
=
docid(p2
4
then
add(answ
docid(p1
5
p1
â†
next(p1
6
p2
â†
next(p2
7
els
if
docid(p1
<
docid(p2
8
then
p1
â†
next(p1
9
els
p2
â†
next(p2
10
return
answer
â—®
figur
1.6
algorithm
for
the
intersect
of
two
post
list
p1
and
p2
and
walk
through
the
two
post
list
simultan
in
time
linear
in
the
total
number
of
post
entri
at
each
step
we
compar
the
docid
point
to
by
both
pointer
if
they
are
the
same
we
put
that
docid
in
the
result
list
and
advanc
both
pointer
otherwis
we
advanc
the
pointer
point
to
the
smaller
docid
if
the
length
of
the
post
list
are
x
and
y
the
intersect
take
o(x
+
y
oper
formal
the
complex
of
queri
is
î˜(n
where
n
is
the
number
of
document
in
the
collection.6
our
index
method
gain
us
just
a
constant
not
a
differ
in
î˜
time
complex
compar
to
a
linear
scan
but
in
practic
the
constant
is
huge
to
use
thi
algorithm
it
is
crucial
that
post
be
sort
by
a
singl
global
order
use
a
numer
sort
by
docid
is
one
simpl
way
to
achiev
thi
we
can
extend
the
intersect
oper
to
process
more
complic
queri
like
1.2
brutu
or
caesar
and
not
calpurnia
queri
optim
queri
optim
is
the
process
of
select
how
to
organ
the
work
of
answer
a
queri
so
that
the
least
total
amount
of
work
need
to
be
done
by
the
system
a
major
element
of
thi
for
boolean
queri
is
the
order
in
which
post
list
are
access
what
is
the
best
order
for
queri
processing?
consid
a
queri
that
is
an
and
of
t
term
for
instanc
1.3
brutu
and
caesar
and
calpurnia
for
each
of
the
t
term
we
need
to
get
it
post
then
and
them
togeth
the
standard
heurist
is
to
process
term
in
order
of
increas
document
6
the
notat
î˜(â·
is
use
to
express
an
asymptot
tight
bound
on
the
complex
of
an
algorithm
inform
thi
is
often
written
as
o(â·
but
thi
notat
realli
express
an
asymptot
upper
bound
which
need
not
be
tight
cormen
et
al
1990
onlin
edit
c
2009
cambridg
up
12
1
boolean
retriev
intersect(ht1





tni
1
term
â†
sortbyincreasingfrequency(ht1





tni
2
result
â†
postings(f
irst(term
3
term
â†
rest(term
4
while
term
6=
nil
and
result
6=
nil
5
do
result
â†
intersect(result
postings(f
irst(term
6
term
â†
rest(term
7
return
result
â—®
figur
1.7
algorithm
for
conjunct
queri
that
return
the
set
of
document
contain
each
term
in
the
input
list
of
term
frequenc
if
we
start
by
intersect
the
two
smallest
post
list
then
all
intermedi
result
must
be
no
bigger
than
the
smallest
post
list
and
we
are
therefor
like
to
do
the
least
amount
of
total
work
so
for
the
post
list
in
figur
1.3
page
7
we
execut
the
abov
queri
as
1.4
calpurnia
and
brutu
and
caesar
thi
is
a
first
justif
for
keep
the
frequenc
of
term
in
the
dictionari
it
allow
us
to
make
thi
order
decis
base
on
in-memori
data
befor
access
ani
post
list
consid
now
the
optim
of
more
gener
queri
such
as
1.5
mad
or
crowd
and
ignobl
or
strife
and
kill
or
slain
as
befor
we
will
get
the
frequenc
for
all
term
and
we
can
then
conserv
estim
the
size
of
each
or
by
the
sum
of
the
frequenc
of
it
disjunct
we
can
then
process
the
queri
in
increas
order
of
the
size
of
each
disjunct
term
for
arbitrari
boolean
queri
we
have
to
evalu
and
temporarili
store
the
answer
for
intermedi
express
in
a
complex
express
howev
in
mani
circumst
either
becaus
of
the
natur
of
the
queri
languag
or
just
becaus
thi
is
the
most
common
type
of
queri
that
user
submit
a
queri
is
pure
conjunct
in
thi
case
rather
than
view
merg
post
list
as
a
function
with
two
input
and
a
distinct
output
it
is
more
effici
to
intersect
each
retriev
post
list
with
the
current
intermedi
result
in
memori
where
we
initi
the
intermedi
result
by
load
the
post
list
of
the
least
frequent
term
thi
algorithm
is
shown
in
figur
1.7
the
intersect
oper
is
then
asymmetr
the
intermedi
result
list
is
in
memori
while
the
list
it
is
be
intersect
with
is
be
read
from
disk
moreov
the
intermedi
result
list
is
alway
at
least
as
short
as
the
other
list
and
in
mani
case
it
is
order
of
magnitud
shorter
the
post
onlin
edit
c
2009
cambridg
up
1.3
process
boolean
queri
13
intersect
can
still
be
done
by
the
algorithm
in
figur
1.6
but
when
the
differ
between
the
list
length
is
veri
larg
opportun
to
use
altern
techniqu
open
up
the
intersect
can
be
calcul
in
place
by
destruct
modifi
or
mark
invalid
item
in
the
intermedi
result
list
or
the
intersect
can
be
done
as
a
sequenc
of
binari
search
in
the
long
post
list
for
each
post
in
the
intermedi
result
list
anoth
possibl
is
to
store
the
long
post
list
as
a
hashtabl
so
that
membership
of
an
intermedi
result
item
can
be
calcul
in
constant
rather
than
linear
or
log
time
howev
such
altern
techniqu
are
difficult
to
combin
with
post
list
compress
of
the
sort
discuss
in
chapter
5
moreov
standard
post
list
intersect
oper
remain
necessari
when
both
term
of
a
queri
are
veri
common
?
exercis
1.4
â‹†
for
the
queri
below
can
we
still
run
through
the
intersect
in
time
o(x
+
y
where
x
and
y
are
the
length
of
the
post
list
for
brutu
and
caesar?
if
not
what
can
we
achieve?
a
brutu
and
not
caesar
b
brutu
or
not
caesar
exercis
1.5
â‹†
extend
the
post
merg
algorithm
to
arbitrari
boolean
queri
formula
what
is
it
time
complexity?
for
instanc
consid
c
brutu
or
caesar
and
not
antoni
or
cleopatra
can
we
alway
merg
in
linear
time?
linear
in
what?
can
we
do
better
than
this?
exercis
1.6
â‹†â‹†
we
can
use
distribut
law
for
and
and
or
to
rewrit
queri
a
show
how
to
rewrit
the
queri
in
exercis
1.5
into
disjunct
normal
form
use
the
distribut
law
b
would
the
result
queri
be
more
or
less
effici
evalu
than
the
origin
form
of
thi
query?
c
is
thi
result
true
in
gener
or
doe
it
depend
on
the
word
and
the
content
of
the
document
collection?
exercis
1.7
â‹†
recommend
a
queri
process
order
for
d
tangerin
or
tree
and
marmalad
or
sky
and
kaleidoscop
or
eye
given
the
follow
post
list
size
onlin
edit
c
2009
cambridg
up
14
1
boolean
retriev
term
post
size
eye
213312
kaleidoscop
87009
marmalad
107913
sky
271658
tangerin
46653
tree
316812
exercis
1.8
â‹†
if
the
queri
is
e
friend
and
roman
and
not
countrymen
how
could
we
use
the
frequenc
of
countrymen
in
evalu
the
best
queri
evalu
order?
in
particular
propos
a
way
of
handl
negat
in
determin
the
order
of
queri
process
exercis
1.9
â‹†â‹†
for
a
conjunct
queri
is
process
post
list
in
order
of
size
guarante
to
be
optimal?
explain
whi
it
is
or
give
an
exampl
where
it
isnâ€™t
exercis
1.10
â‹†â‹†
write
out
a
post
merg
algorithm
in
the
style
of
figur
1.6
page
11
for
an
x
or
y
queri
exercis
1.11
â‹†â‹†
how
should
the
boolean
queri
x
and
not
y
be
handled?
whi
is
naiv
evalu
of
thi
queri
normal
veri
expensive?
write
out
a
post
merg
algorithm
that
evalu
thi
queri
effici
1.4
the
extend
boolean
model
versu
rank
retriev
rank
retriev
the
boolean
retriev
model
contrast
with
rank
retriev
model
such
as
the
model
vector
space
model
section
6.3
in
which
user
larg
use
free
text
queri
free
text
queri
that
is
just
type
one
or
more
word
rather
than
use
a
precis
languag
with
oper
for
build
up
queri
express
and
the
system
decid
which
document
best
satisfi
the
queri
despit
decad
of
academ
research
on
the
advantag
of
rank
retriev
system
implement
the
boolean
retriev
model
were
the
main
or
onli
search
option
provid
by
larg
commerci
inform
provid
for
three
decad
until
the
earli
1990
approxim
the
date
of
arriv
of
the
world
wide
web
howev
these
system
did
not
have
just
the
basic
boolean
oper
and
or
and
not
which
we
have
present
so
far
a
strict
boolean
express
over
term
with
an
unord
result
set
is
too
limit
for
mani
of
the
inform
need
that
peopl
have
and
these
system
implement
extend
boolean
retriev
model
by
incorpor
addit
oper
such
as
term
proxim
operproxim
oper
ator
a
proxim
oper
is
a
way
of
specifi
that
two
term
in
a
queri
onlin
edit
c
2009
cambridg
up
1.4
the
extend
boolean
model
versu
rank
retriev
15
must
occur
close
to
each
other
in
a
document
where
close
may
be
measur
by
limit
the
allow
number
of
interven
word
or
by
refer
to
a
structur
unit
such
as
a
sentenc
or
paragraph
âœž
exampl
1.1
commerci
boolean
search
westlaw
westlaw
http://www.westlaw.com/
is
the
largest
commerci
legal
search
servic
in
term
of
the
number
of
pay
subscrib
with
over
half
a
million
subscrib
perform
million
of
search
a
day
over
ten
of
terabyt
of
text
data
the
servic
wa
start
in
1975
in
2005
boolean
search
call
â€œterm
and
connectorsâ€
by
westlaw
wa
still
the
default
and
use
by
a
larg
percentag
of
user
although
rank
free
text
queri
call
â€œnatur
languageâ€
by
westlaw
wa
ad
in
1992
here
are
some
exampl
boolean
queri
on
westlaw
inform
need
inform
on
the
legal
theori
involv
in
prevent
the
disclosur
of
trade
secret
by
employe
formerli
employ
by
a
compet
compani
queri
trade
secret
/s
disclo
/s
prevent
/s
employ
inform
need
requir
for
disabl
peopl
to
be
abl
to
access
a
workplac
queri
disab
/p
access
/s
work-sit
work-plac
employ
/3
place
inform
need
case
about
a
hostâ€™
respons
for
drunk
guest
queri
host
/p
responsib
liab
/p
intoxicat
drunk
/p
guest
note
the
long
precis
queri
and
the
use
of
proxim
oper
both
uncommon
in
web
search
submit
queri
averag
about
ten
word
in
length
unlik
web
search
convent
a
space
between
word
repres
disjunct
the
tightest
bind
oper
&
is
and
and
/s
/p
and
/k
ask
for
match
in
the
same
sentenc
same
paragraph
or
within
k
word
respect
doubl
quot
give
a
phrase
search
consecut
word
see
section
2.4
page
39
the
exclam
mark

give
a
trail
wildcard
queri
see
section
3.2
page
51
thu
liab
match
all
word
start
with
liab
addit
work-sit
match
ani
of
worksit
work-sit
or
work
site
see
section
2.2.1
page
22
typic
expert
queri
are
usual
care
defin
and
increment
develop
until
they
obtain
what
look
to
be
good
result
to
the
user
mani
user
particularli
profession
prefer
boolean
queri
model
boolean
queri
are
precis
a
document
either
match
the
queri
or
it
doe
not
thi
offer
the
user
greater
control
and
transpar
over
what
is
retriev
and
some
domain
such
as
legal
materi
allow
an
effect
mean
of
document
rank
within
a
boolean
model
westlaw
return
document
in
revers
chronolog
order
which
is
in
practic
quit
effect
in
2007
the
major
of
law
librarian
still
seem
to
recommend
term
and
connector
for
high
recal
search
and
the
major
of
legal
user
think
they
are
get
greater
control
by
use
them
howev
thi
doe
not
mean
that
boolean
queri
are
more
effect
for
profession
searcher
inde
experi
on
a
westlaw
subcollect
turtl
1994
found
that
free
text
queri
produc
better
result
than
boolean
queri
prepar
by
westlawâ€™
own
refer
librarian
for
the
major
of
the
inform
need
in
hi
experi
a
gener
problem
with
boolean
search
is
that
use
and
oper
tend
to
produc
high
precis
but
low
recal
search
while
use
or
oper
give
low
precis
but
high
recal
search
and
it
is
difficult
or
imposs
to
find
a
satisfactori
middl
ground
in
thi
chapter
we
have
look
at
the
structur
and
construct
of
a
basic
onlin
edit
c
2009
cambridg
up
16
1
boolean
retriev
invert
index
compris
a
dictionari
and
post
list
we
introduc
the
boolean
retriev
model
and
examin
how
to
do
effici
retriev
via
linear
time
merg
and
simpl
queri
optim
in
chapter
2â€“7
we
will
consid
in
detail
richer
queri
model
and
the
sort
of
augment
index
structur
that
are
need
to
handl
them
effici
here
we
just
mention
a
few
of
the
main
addit
thing
we
would
like
to
be
abl
to
do
1
we
would
like
to
better
determin
the
set
of
term
in
the
dictionari
and
to
provid
retriev
that
is
toler
to
spell
mistak
and
inconsist
choic
of
word
2
it
is
often
use
to
search
for
compound
or
phrase
that
denot
a
concept
such
as
â€œoper
systemâ€
as
the
westlaw
exampl
show
we
might
also
wish
to
do
proxim
queri
such
as
gate
near
microsoft
to
answer
such
queri
the
index
ha
to
be
augment
to
captur
the
proxim
of
term
in
document
3
a
boolean
model
onli
record
term
presenc
or
absenc
but
often
we
would
like
to
accumul
evid
give
more
weight
to
document
that
have
a
term
sever
time
as
oppos
to
one
that
contain
it
onli
onc
to
term
frequenc
be
abl
to
do
thi
we
need
term
frequenc
inform
the
number
of
time
a
term
occur
in
a
document
in
post
list
4
boolean
queri
just
retriev
a
set
of
match
document
but
commonli
we
wish
to
have
an
effect
method
to
order
or
â€œrankâ€
the
return
result
thi
requir
have
a
mechan
for
determin
a
document
score
which
encapsul
how
good
a
match
a
document
is
for
a
queri
with
these
addit
idea
we
will
have
seen
most
of
the
basic
technolog
that
support
ad
hoc
search
over
unstructur
inform
ad
hoc
search
over
document
ha
recent
conquer
the
world
power
not
onli
web
search
engin
but
the
kind
of
unstructur
search
that
lie
behind
the
larg
ecommerc
websit
although
the
main
web
search
engin
differ
by
emphas
free
text
queri
most
of
the
basic
issu
and
technolog
of
index
and
queri
remain
the
same
as
we
will
see
in
later
chapter
moreov
over
time
web
search
engin
have
ad
at
least
partial
implement
of
some
of
the
most
popular
oper
from
extend
boolean
model
phrase
search
is
especi
popular
and
most
have
a
veri
partial
implement
of
boolean
oper
nevertheless
while
these
option
are
like
by
expert
searcher
they
are
littl
use
by
most
peopl
and
are
not
the
main
focu
in
work
on
tri
to
improv
web
search
engin
perform
?
exercis
1.12
â‹†
write
a
queri
use
westlaw
syntax
which
would
find
ani
of
the
word
professor
teacher
or
lectur
in
the
same
sentenc
as
a
form
of
the
verb
explain
onlin
edit
c
2009
cambridg
up
1.5
refer
and
further
read
17
exercis
1.13
â‹†
tri
use
the
boolean
search
featur
on
a
coupl
of
major
web
search
engin
for
instanc
choos
a
word
such
as
burglar
and
submit
the
queri
i
burglar
ii
burglar
and
burglar
and
iii
burglar
or
burglar
look
at
the
estim
number
of
result
and
top
hit
do
they
make
sens
in
term
of
boolean
logic?
often
they
havenâ€™t
for
major
search
engin
can
you
make
sens
of
what
is
go
on?
what
about
if
you
tri
differ
words?
for
exampl
queri
for
i
knight
ii
conquer
and
then
iii
knight
or
conquer
what
bound
should
the
number
of
result
from
the
first
two
queri
place
on
the
third
query?
is
thi
bound
observed?
1.5
refer
and
further
read
the
practic
pursuit
of
computer
inform
retriev
began
in
the
late
1940
cleverdon
1991
liddi
2005
a
great
increas
in
the
product
of
scientif
literatur
much
in
the
form
of
less
formal
technic
report
rather
than
tradit
journal
articl
coupl
with
the
avail
of
comput
led
to
interest
in
automat
document
retriev
howev
in
those
day
document
retriev
wa
alway
base
on
author
titl
and
keyword
full-text
search
came
much
later
the
articl
of
bush
1945
provid
last
inspir
for
the
new
field
â€œconsid
a
futur
devic
for
individu
use
which
is
a
sort
of
mechan
privat
file
and
librari
it
need
a
name
and
to
coin
one
at
random
â€˜memexâ€™
will
do
a
memex
is
a
devic
in
which
an
individu
store
all
hi
book
record
and
commun
and
which
is
mechan
so
that
it
may
be
consult
with
exceed
speed
and
flexibl
it
is
an
enlarg
intim
supplement
to
hi
memory.â€
the
term
inform
retriev
wa
coin
by
calvin
mooer
in
1948/1950
mooer
1950
in
1958
much
newspap
attent
wa
paid
to
demonstr
at
a
confer
see
taub
and
wooster
1958
of
ibm
â€œauto-indexingâ€
machin
base
primarili
on
the
work
of
h
p
luhn
commerci
interest
quickli
gravit
toward
boolean
retriev
system
but
the
earli
year
saw
a
headi
debat
over
variou
dispar
technolog
for
retriev
system
for
exampl
mooer
1961
dissent
â€œit
is
a
common
fallaci
underwritten
at
thi
date
by
the
invest
of
sever
million
dollar
in
a
varieti
of
retriev
hardwar
that
the
algebra
of
georg
bool
1847
is
the
appropri
formal
for
retriev
system
design
thi
view
is
as
wide
and
uncrit
accept
as
it
is
wrong.â€
the
observ
of
and
vs
or
give
you
opposit
extrem
in
a
precision/
recal
tradeoff
but
not
the
middl
ground
come
from
lee
and
fox
1988
onlin
edit
c
2009
cambridg
up
18
1
boolean
retriev
the
book
witten
et
al
1999
is
the
standard
refer
for
an
in-depth
comparison
of
the
space
and
time
effici
of
the
invert
index
versu
other
possibl
data
structur
a
more
succinct
and
up-to-d
present
appear
in
zobel
and
moffat
2006
we
further
discuss
sever
approach
in
chapter
5
regular
express
friedl
2006
cover
the
practic
usag
of
regular
express
for
search
the
underli
comput
scienc
appear
in
hopcroft
et
al
2000
onlin
edit
c
2009
cambridg
up
draft
â©
april
1
2009
cambridg
univers
press
feedback
welcom
19
2
the
term
vocabulari
and
post
list
recal
the
major
step
in
invert
index
construct
1
collect
the
document
to
be
index
2
token
the
text
3
do
linguist
preprocess
of
token
4
index
the
document
that
each
term
occur
in
in
thi
chapter
we
first
briefli
mention
how
the
basic
unit
of
a
document
can
be
defin
and
how
the
charact
sequenc
that
it
compris
is
determin
section
2.1
we
then
examin
in
detail
some
of
the
substant
linguist
issu
of
token
and
linguist
preprocess
which
determin
the
vocabulari
of
term
which
a
system
use
section
2.2
token
is
the
process
of
chop
charact
stream
into
token
while
linguist
preprocess
then
deal
with
build
equival
class
of
token
which
are
the
set
of
term
that
are
index
index
itself
is
cover
in
chapter
1
and
4
then
we
return
to
the
implement
of
post
list
in
section
2.3
we
examin
an
extend
post
list
data
structur
that
support
faster
queri
while
section
2.4
cover
build
post
data
structur
suitabl
for
handl
phrase
and
proxim
queri
of
the
sort
that
commonli
appear
in
both
extend
boolean
model
and
on
the
web
2.1
document
delin
and
charact
sequenc
decod
2.1.1
obtain
the
charact
sequenc
in
a
document
digit
document
that
are
the
input
to
an
index
process
are
typic
byte
in
a
file
or
on
a
web
server
the
first
step
of
process
is
to
convert
thi
byte
sequenc
into
a
linear
sequenc
of
charact
for
the
case
of
plain
english
text
in
ascii
encod
thi
is
trivial
but
often
thing
get
much
more
onlin
edit
c
2009
cambridg
up
20
2
the
term
vocabulari
and
post
list
complex
the
sequenc
of
charact
may
be
encod
by
one
of
variou
singl
byte
or
multibyt
encod
scheme
such
as
unicod
utf-8
or
variou
nation
or
vendor-specif
standard
we
need
to
determin
the
correct
encod
thi
can
be
regard
as
a
machin
learn
classif
problem
as
discuss
in
chapter
13
1
but
is
often
handl
by
heurist
method
user
select
or
by
use
provid
document
metadata
onc
the
encod
is
determin
we
decod
the
byte
sequenc
to
a
charact
sequenc
we
might
save
the
choic
of
encod
becaus
it
give
some
evid
about
what
languag
the
document
is
written
in
the
charact
may
have
to
be
decod
out
of
some
binari
represent
like
microsoft
word
doc
file
and/or
a
compress
format
such
as
zip
file
again
we
must
determin
the
document
format
and
then
an
appropri
decod
ha
to
be
use
even
for
plain
text
document
addit
decod
may
need
to
be
done
in
xml
document
section
10.1
page
197
charact
entiti
such
as
&amp
need
to
be
decod
to
give
the
correct
charact
name
&
for
&amp
final
the
textual
part
of
the
document
may
need
to
be
extract
out
of
other
materi
that
will
not
be
process
thi
might
be
the
desir
handl
for
xml
file
if
the
markup
is
go
to
be
ignor
we
would
almost
certainli
want
to
do
thi
with
postscript
or
pdf
file
we
will
not
deal
further
with
these
issu
in
thi
book
and
will
assum
henceforth
that
our
document
are
a
list
of
charact
commerci
product
usual
need
to
support
a
broad
rang
of
document
type
and
encod
sinc
user
want
thing
to
just
work
with
their
data
as
is
often
they
just
think
of
document
as
text
insid
applic
and
are
not
even
awar
of
how
it
is
encod
on
disk
thi
problem
is
usual
solv
by
licens
a
softwar
librari
that
handl
decod
document
format
and
charact
encod
the
idea
that
text
is
a
linear
sequenc
of
charact
is
also
call
into
question
by
some
write
system
such
as
arab
where
text
take
on
some
two
dimension
and
mix
order
characterist
as
shown
in
figur
2.1
and
2.2
but
despit
some
complic
write
system
convent
there
is
an
underli
sequenc
of
sound
be
repres
and
henc
an
essenti
linear
structur
remain
and
thi
is
what
is
repres
in
the
digit
represent
of
arab
as
shown
in
figur
2.1
2.1.2
choos
a
document
unit
document
unit
the
next
phase
is
to
determin
what
the
document
unit
for
index
is
thu
far
we
have
assum
that
document
are
fix
unit
for
the
purpos
of
index
for
exampl
we
take
each
file
in
a
folder
as
a
document
but
there
1
a
classifi
is
a
function
that
take
object
of
some
sort
and
assign
them
to
one
of
a
number
of
distinct
class
see
chapter
13
usual
classif
is
done
by
machin
learn
method
such
as
probabilist
model
but
it
can
also
be
done
by
hand-written
rule
onlin
edit
c
2009
cambridg
up
2.1
document
delin
and
charact
sequenc
decod
21
ùƒ
ù
øª
ø§
ø¨
ùœ
â‡
ø¢ùùžø¨ùœ
un
b
ä
t
i
k
/kitäbun/
â€˜a
bookâ€™
â—®
figur
2.1
an
exampl
of
a
vocal
modern
standard
arab
word
the
write
is
from
right
to
left
and
letter
undergo
complex
mutat
as
they
are
combin
the
represent
of
short
vowel
here
/i/
and
/u/
and
the
final
/n/
nunat
depart
from
strict
linear
by
be
repres
as
diacrit
abov
and
below
letter
nevertheless
the
repres
text
is
still
clearli
a
linear
order
of
charact
repres
sound
full
vocal
as
here
normal
appear
onli
in
the
koran
and
childrenâ€™
book
day-to-day
text
is
unvoc
short
vowel
are
not
repres
but
the
letter
for
a
would
still
appear
or
partial
vocal
with
short
vow
â¯
el
insert
in
place
where
the
writer
perceiv
ambigu
these
choic
add
further
complex
to
index
ø§
ø§
ø§


1962

132

!"#
ø§

ù„
ø§



â†
â†’
â†
â†’
â†
start
â€˜algeria
achiev
it
independ
in
1962
after
132
year
of
french
occupation.â€™
â—®
figur
2.2
the
conceptu
linear
order
of
charact
is
not
necessarili
the
order
that
you
see
on
the
page
in
languag
that
are
written
right-to-left
such
as
hebrew
and
arab
it
is
quit
common
to
also
have
left-to-right
text
interspers
such
as
number
and
dollar
amount
with
modern
unicod
represent
concept
the
order
of
charact
in
file
match
the
conceptu
order
and
the
revers
of
display
charact
is
handl
by
the
render
system
but
thi
may
not
be
true
for
document
in
older
encod
are
mani
case
in
which
you
might
want
to
do
someth
differ
a
tradit
unix
mbox-format
email
file
store
a
sequenc
of
email
messag
an
email
folder
in
one
file
but
you
might
wish
to
regard
each
email
messag
as
a
separ
document
mani
email
messag
now
contain
attach
document
and
you
might
then
want
to
regard
the
email
messag
and
each
contain
attach
as
separ
document
if
an
email
messag
ha
an
attach
zip
file
you
might
want
to
decod
the
zip
file
and
regard
each
file
it
contain
as
a
separ
document
go
in
the
opposit
direct
variou
piec
of
web
softwar
such
as
latex2html
take
thing
that
you
might
regard
as
a
singl
document
e.g
a
powerpoint
file
or
a
latex
document
and
split
them
into
separ
html
page
for
each
slide
or
subsect
store
as
separ
file
in
these
case
you
might
want
to
combin
multipl
file
into
a
singl
document
index
more
gener
for
veri
long
document
the
issu
of
index
granular
granular
aris
for
a
collect
of
book
it
would
usual
be
a
bad
idea
to
index
an
